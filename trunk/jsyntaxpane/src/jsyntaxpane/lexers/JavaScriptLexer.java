// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   JavaScriptLexer.java

package jsyntaxpane.lexers;

import java.io.*;
import jsyntaxpane.Token;
import jsyntaxpane.TokenType;

// Referenced classes of package jsyntaxpane.lexers:
//            DefaultJFlexLexer

public final class JavaScriptLexer extends DefaultJFlexLexer
{

    private static int[] zzUnpackAction()
    {
        int result[] = new int[167];
        int offset = 0;
        offset = zzUnpackAction("\002\000\003\001\002\002\001\003\002\004\002\002\021\003\006\002\001\005\001\006\002\007\001\001\001\b\001\t\001\000\001\n\003\004\001\000\003\004\001\000\n\003\001\013\013\003\001\002\001\f\002\006\002\t\002\000\004\004\001\000\023\003\001\006\001\000\002\004\013\003\002\004\005\003\001\n\003\003\002\004\005\003\b\004\001\000\001\004\001\000\001\004\001\000\001\004\001\000\001\004\001\000\001\004\001\000\001\004\001\000\001\004\001\000\005\004", offset, result);
        return result;
    }

    private static int zzUnpackAction(String packed, int offset, int result[])
    {
        int i = 0;
        int j = offset;
        for(int l = packed.length(); i < l;)
        {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            do
                result[j++] = value;
            while(--count > 0);
        }

        return j;
    }

    private static int[] zzUnpackRowMap()
    {
        int result[] = new int[167];
        int offset = 0;
        offset = zzUnpackRowMap("\000\000\0009\000r\000\253\000\344\000\u011D\000\u0156\000\u018F\000\u01C8\000\u0201\000\u023A\000\u0273\000\u02AC\000\u02E5\000\u031E\000\u0357\000\u0390\000\u03C9\000\u0402\000\u043B\000\u0474\000\u04AD\000\u04E6\000\u051F\000\u0558\000\u0591\000\u05CA\000\u0603\000\u063C\000r\000\u0675\000\u06AE\000\u06E7\000\u0720\000\u0759\000r\000\u0792\000\u07CB\000r\000\u0804\000r\000\u083D\000\u0876\000r\000\u08AF\000\u08E8\000r\000\u0921\000\u095A\000\u0993\000\u09CC\000\u0A05\000\u0A3E\000\u0A77\000\u0AB0\000\u0AE9\000\u0B22\000\u0B5B\000\u0B94\000\u0BCD\000\u0C06\000\u0C3F\000\u018F\000\u0C78\000\u0CB1\000\u0CEA\000\u0D23\000\u0D5C\000\u0D95\000\u0DCE\000\u0E07\000\u0E40\000\u0E79\000\u0EB2\000\u0EEB\000r\000\u0F24\000\u0F5D\000\u0F96\000r\000\u0FCF\000\u1008\000\u1041\000\u107A\000\u10B3\000\u10EC\000\u1125\000\u115E\000\u1197\000\u11D0\000\u1209\000\u1242\000\u127B\000\u12B4\000\u12ED\000\u1326\000\u135F\000\u1398\000\u13D1\000\u140A\000\u1443\000\u147C\000\u14B5\000\u14EE\000\u1527\000\u1560\000r\000\u1599\000\u15D2\000\u160B\000\u1644\000\u167D\000\u16B6\000\u16EF\000\u1728\000\u1761\000\u179A\000\u17D3\000\u180C\000\u1845\000\u187E\000\u18B7\000\u18F0\000\u1929\000\u1962\000\u199B\000\u19D4\000\u1A0D\000\u018F\000\u1A46\000\u1A7F\000\u1AB8\000\u1AF1\000\u1B2A\000\u1B63\000\u1B9C\000\u1BD5\000\u1C0E\000\u1C47\000\u1C80\000\u1CB9\000\u1CF2\000\u1D2B\000\u1D64\000\u1D9D\000\u1DD6\000\u1E0F\000\u1E48\000\u1E81\000\u1EBA\000\u1EF3\000\u1F2C\000\u1F65\000\u1F9E\000\u1FD7\000\u2010\000\u2049\000\u2082\000\u20BB\000\u20F4\000\u212D\000\u2166\000\u219F\000\u21D8\000\u2211\000\u224A\000\u2283", offset, result);
        return result;
    }

    private static int zzUnpackRowMap(String packed, int offset, int result[])
    {
        int i = 0;
        int j = offset;
        for(int l = packed.length(); i < l;)
        {
            int high = packed.charAt(i++) << 16;
            result[j++] = high | packed.charAt(i++);
        }

        return j;
    }

    private static int[] zzUnpackTrans()
    {
        int result[] = new int[8892];
        int offset = 0;
        offset = zzUnpackTrans("\001\003\001\004\001\003\001\005\001\006\001\007\001\b\001\003\001\t\001\n\003\b\003\n\001\b\001\013\001\b\001\f\001\003\001\r\001\016\001\017\002\b\001\020\001\021\001\022\002\b\001\023\001\024\001\b\001\025\001\b\001\026\001\b\001\027\001\030\001\031\001\032\001\033\001\034\002\b\001\035\002\036\001\007\001\037\001 \001\007\001!\001\"\001#\001$\001%\001&\001'\021%\001(#%\001);\000\001\0039\000\001\0059\000\001*\001++\000\001\0368\000\001\036\r\000\013\b\001\000\001\b\002\000\032\b\001,\021\000\001-\001.\001/\0010\001\000\0011\0012\0011\001/\0013\0014\004\000\0014\n\000\003/\007\000\0010\024\000\002\n\001/\002\000\003\n\001/\0013\0014\004\000\0014\n\000\003/\034\000\0023\003\000\0033<\000\001\036\035\000\001\036\r\000\013\b\001\000\001\b\002\000\001\b\0015\030\b\001,\017\000\013\b\001\000\001\b\002\000\002\b\0016\027\b\001,\017\000\013\b\001\000\001\b\002\000\016\b\0017\013\b\001,\017\000\013\b\001\000\001\b\002\000\003\b\0018\005\b\0019\020\b\001,\017\000\013\b\001\000\001\b\002\000\021\b\001:\b\b\001,\017\000\013\b\001\000\001\b\002\000\001\b\001;\006\b\001<\021\b\001,\017\000\013\b\001\000\001\b\002\000\002\b\001=\t\b\001>\r\b\001,\017\000\013\b\001\000\001\b\002\000\n\b\001?\004\b\001?\n\b\001,\017\000\013\b\001\000\001\b\002\000\002\b\001@\006\b\001?\020\b\001,\017\000\013\b\001\000\001\b\002\000\003\b\001\017\005\b\001A\001\b\001B\001C\r\b\001,\017\000\013\b\001\000\001\b\002\000\b\b\001D\002\b\001E\016\b\001,\017\000\013\b\001\000\001\b\002\000\t\b\001F\020\b\001,\017\000\013\b\001\000\001\b\002\000\003\b\001A\026\b\001,\017\000\013\b\001\000\001\b\002\000\001\b\001G\030\b\001,\017\000\013\b\001\000\001\b\002\000\t\b\001H\020\b\001,\017\000\013\b\001\000\001\b\002\000\002\b\001I\027\b\001,\017\000\013\b\001\000\001\b\002\000\007\b\001J\022\b\001,:\000\001\036\001K7\000\001\036\001\000\001\0076\000\001\036\003\000\001\0364\000\001\036\004\000\001\0363\000\001\036\005\000\001\036\001\000\001%\002\000\021%\001\000#%\003\000\001'6\000\002L\001\000\005L\001M\004L\002M\001N)L\001*\001O\001P6*\005Q\001R3Q\b\000\001-\001.\001/\002\000\0011\0012\0011\001/\0013\0014\004\000\0014\n\000\003/\034\000\002.\003\000\003.\001/\0013\0014\004\000\0014\n\000\001/\001\000\001/\034\000\001S\001T\002\000\005T\001\000\001T\002\000\001T\001\000\002T\001\000\001T\007\000\001T\001\000\001T\004\000\002T\026\000\001U\001.\001/\002\000\003U\001/\0013\0014\004\000\0014\n\000\003/\034\000\0011\001.\001/\002\000\0031\001/\0013\0014\004\000\0014\n\000\003/\034\000\0023\003\000\0033\001/\001\000\0014\004\000\0014\n\000\001/\001\000\001/\034\000\002V\003\000\003V\003\000\001W#\000\001W\007\000\013\b\001\000\001\b\002\000\002\b\001X\027\b\001,\017\000\013\b\001\000\001\b\002\000\007\b\001Y\022\b\001,\017\000\013\b\001\000\001\b\002\000\006\b\001Z\023\b\001,\017\000\013\b\001\000\001\b\002\000\006\b\001Z\001[\022\b\001,\017\000\013\b\001\000\001\b\002\000\n\b\001\\\017\b\001,\017\000\013\b\001\000\001\b\002\000\013\b\001]\016\b\001,\017\000\013\b\001\000\001\b\002\000\f\b\001Z\003\b\001?\t\b\001,\017\000\013\b\001\000\001\b\002\000\013\b\001^\016\b\001,\017\000\013\b\001\000\001\b\002\000\021\b\001?\b\b\001,\017\000\013\b\001\000\001\b\002\000\016\b\001_\013\b\001,\017\000\013\b\001\000\001\b\002\000\016\b\001`\001a\n\b\001,\017\000\013\b\001\000\001\b\002\000\001\b\001?\030\b\001,\017\000\013\b\001\000\001\b\002\000\n\b\001b\017\b\001,\017\000\013\b\001\000\001\b\002\000\n\b\001c\017\b\001,\017\000\013\b\001\000\001\b\002\000\013\b\001d\016\b\001,\017\000\013\b\001\000\001\b\002\000\007\b\001e\022\b\001,\017\000\013\b\001\000\001\b\002\000\007\b\001f\022\b\001,\017\000\013\b\001\000\001\b\002\000\001\b\001g\030\b\001,\017\000\013\b\001\000\001\b\002\000\t\b\001h\020\b\001,\017\000\013\b\001\000\001\b\002\000\022\b\001i\007\b\001,\017\000\013\b\001\000\001\b\002\000\001\b\001j\030\b\001,:\000\001\036\001\007\016\000\001N\004\000\003N1\000\001k\004\000\003k+\000\001P6\000\005Q\001l3Q\004\000\001P\001R;\000\001S\001T\001/\001\000\005T\001\000\001T\002\000\001T\001\000\002T\001\000\001T\007\000\001T\001/\001T\004\000\002T\026\000\002m\001/\001\000\005m\001\000\001m\002\000\001m\001\000\002m\001\000\001m\007\000\001m\001/\001m\004\000\002m\026\000\001n\001.\001/\002\000\003n\001/\0013\0014\004\000\0014\n\000\003/\034\000\002V\003\000\003V\001/\021\000\001/\001\000\001/\034\000\002V\003\000\003V/\000\013\b\001\000\001\b\002\000\003\b\001o\026\b\001,\017\000\013\b\001\000\001\b\002\000\f\b\001p\r\b\001,\017\000\013\b\001\000\001\b\002\000\002\b\001?\027\b\001,\017\000\013\b\001\000\001\b\002\000\005\b\001e\024\b\001,\017\000\013\b\001\000\001\b\002\000\007\b\001q\022\b\001,\017\000\013\b\001\000\001\b\002\000\007\b\001[\022\b\001,\017\000\013\b\001\000\001\b\002\000\006\b\001?\023\b\001,\017\000\013\b\001\000\001\b\002\000\016\b\001?\013\b\001,\017\000\013\b\001\000\001\b\002\000\002\b\001r\027\b\001,\017\000\013\b\001\000\001\b\002\000\003\b\001s\026\b\001,\017\000\013\b\001\000\001\b\002\000\003\b\001t\026\b\001,\017\000\013\b\001\000\001\b\002\000\005\b\001u\024\b\001,\017\000\013\b\001\000\001\b\002\000\016\b\001Z\013\b\001,\017\000\013\b\001\000\001\b\002\000\b\b\001?\021\b\001,\017\000\013\b\001\000\001\b\002\000\t\b\001?\020\b\001,\017\000\013\b\001\000\001\b\002\000\003\b\001v\026\b\001,\017\000\013\b\001\000\001\b\002\000\016\b\001w\013\b\001,\017\000\013\b\001\000\001x\002\000\032\b\001,\017\000\013\b\001\000\001\b\002\000\013\b\001y\016\b\001,\t\000\004Q\001P\001l3Q\b\000\002z\001/\001\000\005z\001\000\001z\002\000\001z\001\000\002z\001\000\001z\007\000\001z\001/\001z\004\000\002z\026\000\001{\001.\001/\002\000\003{\001/\0013\0014\004\000\0014\n\000\003/\032\000\013\b\001\000\001\b\002\000\004\b\001?\025\b\001,\017\000\013\b\001\000\001\b\002\000\001\b\001|\030\b\001,\017\000\013\b\001\000\001\b\002\000\013\b\001}\016\b\001,\017\000\013\b\001\000\001\b\002\000\007\b\001Z\022\b\001,\017\000\013\b\001\000\001\b\002\000\f\b\001~\r\b\001,\017\000\013\b\001\000\001\b\002\000\016\b\001\177\013\b\001,\017\000\013\b\001\000\001\b\002\000\007\b\001\200\022\b\001,\017\000\013\b\001\000\001\b\002\000\020\b\001\201\t\b\001,\017\000\013\b\001\000\001\b\002\000\002\b\001\202\027\b\001,\017\000\013\b\001\000\001\b\002\000\027\b\001\203\002\b\001,\017\000\013\b\001\000\001\b\002\000\n\b\001\204\017\b\001,\021\000\002\205\001/\001\000\005\205\001\000\001\205\002\000\001\205\001\000\002\205\001\000\001\205\007\000\001\205\001/\001\205\004\000\002\205\026\000\001\206\001.\001/\002\000\003\206\001/\0013\0014\004\000\0014\n\000\003/\032\000\013\b\001\000\001\b\002\000\n\b\001?\017\b\001,\017\000\013\b\001\000\001\b\002\000\n\b\001\207\017\b\001,\017\000\013\b\001\000\001\b\002\000\016\b\001\210\013\b\001,\017\000\013\b\001\000\001\b\002\000\016\b\001\211\013\b\001,\017\000\013\b\001\000\001\b\002\000\013\b\001\212\016\b\001,\017\000\013\b\001\000\001\b\002\000\003\b\001\213\026\b\001,\017\000\013\b\001\000\001\b\002\000\030\b\001\201\001\b\001,\017\000\013\b\001\000\001\b\002\000\022\b\001\201\007\b\001,\021\000\002\214\001/\001\000\005\214\001\000\001\214\002\000\001\214\001\000\002\214\001\000\001\214\007\000\001\214\001/\001\214\004\000\002\214\026\000\001\215\001.\001/\002\000\003\215\001/\0013\0014\004\000\0014\n\000\003/\032\000\013\b\001\000\001\b\002\000\f\b\001Z\r\b\001,\017\000\013\b\001\000\001\b\002\000\007\b\001?\022\b\001,\017\000\013\b\001\000\001\b\002\000\020\b\001?\t\b\001,\017\000\013\b\001\000\001\b\002\000\t\b\001|\020\b\001,\017\000\013\b\001\000\001\b\002\000\n\b\001\201\017\b\001,\021\000\002\216\001/\001\000\005\216\001\000\001\216\002\000\001\216\001\000\002\216\001\000\001\216\007\000\001\216\001/\001\216\004\000\002\216\026\000\001\217\001.\001/\002\000\003\217\001/\0013\0014\004\000\0014\n\000\003/\034\000\002\220\001/\001\000\005\220\001\000\001\220\002\000\001\220\001\000\002\220\001\000\001\220\007\000\001\220\001/\001\220\004\000\002\220\026\000\001\221\001.\001/\002\000\003\221\001/\0013\0014\004\000\0014\n\000\003/\034\000\002\222\001/\001\000\005\222\001\000\001\222\002\000\001\222\001\000\002\222\001\000\001\222\007\000\001\222\001/\001\222\004\000\002\222\026\000\001\223\001.\001/\002\000\003\223\001/\0013\0014\004\000\0014\n\000\003/\034\000\002\224\001/\001\000\005\224\001\000\001\224\002\000\001\224\001\000\002\224\001\000\001\224\007\000\001\224\001/\001\224\004\000\002\224\026\000\001\225\001.\001/\002\000\003\225\001/\0013\0014\004\000\0014\n\000\003/\034\000\002\226\001/\001\000\005\226\001\000\001\226\002\000\001\226\001\000\002\226\001\000\001\226\007\000\001\226\001/\001\226\004\000\002\226\026\000\001\227\001.\001/\002\000\003\227\001/\0013\0014\004\000\0014\n\000\003/\034\000\002\230\001/\001\000\005\230\001\000\001\230\002\000\001\230\001\000\002\230\001\000\001\230\007\000\001\230\001/\001\230\004\000\002\230\026\000\001\231\001.\001/\002\000\003\231\001/\0013\0014\004\000\0014\n\000\003/\034\000\002\232\001/\001\000\005\232\001\000\001\232\002\000\001\232\001\000\002\232\001\000\001\232\007\000\001\232\001/\001\232\004\000\002\232\026\000\001\233\001.\001/\002\000\003\233\001/\0013\0014\004\000\0014\n\000\003/\034\000\002\234\001/\001\000\005\234\001\000\001\234\002\000\001\234\001\000\002\234\001\000\001\234\007\000\001\234\001/\001\234\004\000\002\234\026\000\001\235\001.\001/\002\000\003\235\001/\0013\0014\004\000\0014\n\000\003/\034\000\002\236\001/\001\000\005\236\001\000\001\236\002\000\001\236\001\000\002\236\001\000\001\236\007\000\001\236\001/\001\236\004\000\002\236\026\000\001\237\001.\001/\002\000\003\237\001/\0013\0014\004\000\0014\n\000\003/\034\000\002\240\001/\001\000\005\240\001\000\001\240\002\000\001\240\001\000\002\240\001\000\001\240\007\000\001\240\001/\001\240\004\000\002\240\026\000\001\241\001.\001/\002\000\003\241\001/\0013\0014\004\000\0014\n\000\003/\034\000\002\242\001/\001\000\005\242\001\000\001\242\002\000\001\242\001\000\002\242\001\000\001\242\007\000\001\242\001/\001\242\004\000\002\242\026\000\001\243\001.\001/\002\000\003\243\001/\0013\0014\004\000\0014\n\000\003/\036\000\001/\030\000\001/\035\000\001\244\001.\001/\002\000\003\244\001/\0013\0014\004\000\0014\n\000\003/\034\000\001\245\001.\001/\002\000\003\245\001/\0013\0014\004\000\0014\n\000\003/\034\000\001\246\001.\001/\002\000\003\246\001/\0013\0014\004\000\0014\n\000\003/\034\000\001\247\001.\001/\002\000\003\247\001/\0013\0014\004\000\0014\n\000\003/\034\000\002.\001/\002\000\003.\001/\0013\0014\004\000\0014\n\000\003/\024\0", offset, result);
        return result;
    }

    private static int zzUnpackTrans(String packed, int offset, int result[])
    {
        int i = 0;
        int j = offset;
        for(int l = packed.length(); i < l;)
        {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            value--;
            do
                result[j++] = value;
            while(--count > 0);
        }

        return j;
    }

    private static int[] zzUnpackAttribute()
    {
        int result[] = new int[167];
        int offset = 0;
        offset = zzUnpackAttribute("\002\000\001\t\032\001\001\t\005\001\001\t\002\001\001\t\001\001\001\t\001\001\001\000\001\t\002\001\001\t\001\000\003\001\001\000\027\001\001\t\003\001\001\t\002\000\004\001\001\000\023\001\001\t\001\000'\001\001\000\001\001\001\000\001\001\001\000\001\001\001\000\001\001\001\000\001\001\001\000\001\001\001\000\001\001\001\000\005\001", offset, result);
        return result;
    }

    private static int zzUnpackAttribute(String packed, int offset, int result[])
    {
        int i = 0;
        int j = offset;
        for(int l = packed.length(); i < l;)
        {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            do
                result[j++] = value;
            while(--count > 0);
        }

        return j;
    }

    public JavaScriptLexer()
    {
        zzLexicalState = 0;
        zzBuffer = new char[16384];
        zzAtBOL = true;
    }

    public int yychar()
    {
        return yychar;
    }

    public JavaScriptLexer(Reader in)
    {
        zzLexicalState = 0;
        zzBuffer = new char[16384];
        zzAtBOL = true;
        zzReader = in;
    }

    public JavaScriptLexer(InputStream in)
    {
        this(((Reader) (new InputStreamReader(in))));
    }

    private static char[] zzUnpackCMap(String packed)
    {
        char map[] = new char[0x10000];
        int i = 0;
        int j = 0;
        while(i < 1792) 
        {
            int count = packed.charAt(i++);
            char value = packed.charAt(i++);
            do
                map[j++] = value;
            while(--count > 0);
        }
        return map;
    }

    private boolean zzRefill()
        throws IOException
    {
        if(zzStartRead > 0)
        {
            System.arraycopy(zzBuffer, zzStartRead, zzBuffer, 0, zzEndRead - zzStartRead);
            zzEndRead -= zzStartRead;
            zzCurrentPos -= zzStartRead;
            zzMarkedPos -= zzStartRead;
            zzStartRead = 0;
        }
        if(zzCurrentPos >= zzBuffer.length)
        {
            char newBuffer[] = new char[zzCurrentPos * 2];
            System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
            zzBuffer = newBuffer;
        }
        int numRead = zzReader.read(zzBuffer, zzEndRead, zzBuffer.length - zzEndRead);
        if(numRead > 0)
        {
            zzEndRead += numRead;
            return false;
        }
        if(numRead == 0)
        {
            int c = zzReader.read();
            if(c == -1)
            {
                return true;
            } else
            {
                zzBuffer[zzEndRead++] = (char)c;
                return false;
            }
        } else
        {
            return true;
        }
    }

    public final void yyclose()
        throws IOException
    {
        zzAtEOF = true;
        zzEndRead = zzStartRead;
        if(zzReader != null)
            zzReader.close();
    }

    public final void yyreset(Reader reader)
    {
        zzReader = reader;
        zzAtBOL = true;
        zzAtEOF = false;
        zzEOFDone = false;
        zzEndRead = zzStartRead = 0;
        zzCurrentPos = zzMarkedPos = 0;
        yyline = yychar = yycolumn = 0;
        zzLexicalState = 0;
    }

    public final int yystate()
    {
        return zzLexicalState;
    }

    public final void yybegin(int newState)
    {
        zzLexicalState = newState;
    }

    public final String yytext()
    {
        return new String(zzBuffer, zzStartRead, zzMarkedPos - zzStartRead);
    }

    public final char yycharat(int pos)
    {
        return zzBuffer[zzStartRead + pos];
    }

    public final int yylength()
    {
        return zzMarkedPos - zzStartRead;
    }

    private void zzScanError(int errorCode)
    {
        String message;
        try
        {
            message = ZZ_ERROR_MSG[errorCode];
        }
        catch(ArrayIndexOutOfBoundsException e)
        {
            message = ZZ_ERROR_MSG[0];
        }
        throw new Error(message);
    }

    public void yypushback(int number)
    {
        if(number > yylength())
            zzScanError(2);
        zzMarkedPos -= number;
    }

    public Token yylex()
        throws IOException
    {
        int zzEndReadL = zzEndRead;
        char zzBufferL[] = zzBuffer;
        char zzCMapL[] = ZZ_CMAP;
        int zzTransL[] = ZZ_TRANS;
        int zzRowMapL[] = ZZ_ROWMAP;
        int zzAttrL[] = ZZ_ATTRIBUTE;
        do
        {
            int zzMarkedPosL = zzMarkedPos;
            yychar += zzMarkedPosL - zzStartRead;
            int zzAction = -1;
            int zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
            zzState = ZZ_LEXSTATE[zzLexicalState];
            int zzInput;
            int zzAttributes;
label0:
            do
            {
                do
                {
                    if(zzCurrentPosL < zzEndReadL)
                    {
                        zzInput = zzBufferL[zzCurrentPosL++];
                    } else
                    {
                        if(zzAtEOF)
                        {
                            zzInput = -1;
                            break label0;
                        }
                        zzCurrentPos = zzCurrentPosL;
                        zzMarkedPos = zzMarkedPosL;
                        boolean eof = zzRefill();
                        zzCurrentPosL = zzCurrentPos;
                        zzMarkedPosL = zzMarkedPos;
                        zzBufferL = zzBuffer;
                        zzEndReadL = zzEndRead;
                        if(eof)
                        {
                            zzInput = -1;
                            break label0;
                        }
                        zzInput = zzBufferL[zzCurrentPosL++];
                    }
                    int zzNext = zzTransL[zzRowMapL[zzState] + zzCMapL[zzInput]];
                    if(zzNext == -1)
                        break label0;
                    zzState = zzNext;
                    zzAttributes = zzAttrL[zzState];
                } while((zzAttributes & 1) != 1);
                zzAction = zzState;
                zzMarkedPosL = zzCurrentPosL;
            } while((zzAttributes & 8) != 8);
            zzMarkedPos = zzMarkedPosL;
            switch(zzAction >= 0 ? ZZ_ACTION[zzAction] : zzAction)
            {
            case 11: // '\013'
                return token(TokenType.KEYWORD);

            case 5: // '\005'
                yybegin(2);
                tokenStart = yychar;
                tokenLength = 1;
                break;

            case 8: // '\b'
                yybegin(0);
                return token(TokenType.STRING, tokenStart, tokenLength + 1);

            case 2: // '\002'
                return token(TokenType.OPERATOR);

            case 12: // '\f'
                tokenLength += 2;
                break;

            case 3: // '\003'
                return token(TokenType.IDENTIFIER);

            case 9: // '\t'
                return token(TokenType.COMMENT);

            case 10: // '\n'
                return token(TokenType.TYPE);

            case 4: // '\004'
                return token(TokenType.NUMBER);

            case 7: // '\007'
                yybegin(0);
                break;

            case 6: // '\006'
                tokenLength += yylength();
                break;

            default:
                if(zzInput == -1 && zzStartRead == zzCurrentPos)
                {
                    zzAtEOF = true;
                    return null;
                }
                zzScanError(1);
                break;

            case 1: // '\001'
            case 13: // '\r'
            case 14: // '\016'
            case 15: // '\017'
            case 16: // '\020'
            case 17: // '\021'
            case 18: // '\022'
            case 19: // '\023'
            case 20: // '\024'
            case 21: // '\025'
            case 22: // '\026'
            case 23: // '\027'
            case 24: // '\030'
                break;
            }
        } while(true);
    }

    public static final int YYEOF = -1;
    private static final int ZZ_BUFFERSIZE = 16384;
    public static final int STRING = 2;
    public static final int YYINITIAL = 0;
    private static final int ZZ_LEXSTATE[] = {
        0, 0, 1, 1
    };
    private static final String ZZ_CMAP_PACKED = "\t\007\001\003\001\002\001\000\001\003\001\001\016\007\004\000\001\003\0014\0018\001\000\001\006\0014\0015\001\000\0010\0010\001\005\0017\0010\001\023\001\021\001\004\001\b\001\016\002\r\004\017\002\t\001/\0010\0013\0011\0012\0010\001\000\001)\001*\001\f\001\020\001\022\001\020\005\006\001\n\005\006\001+\001.\004\006\001\013\002\006\0010\001\024\0010\0014\001\006\001\000\001\030\001\025\001\032\001\"\001\027\001$\001'\001\035\001 \001\006\001\031\001#\001\006\001\037\001\036\001-\001\006\001\026\001\033\001\034\001!\001(\001&\001,\001%\001\006\0010\0016\0010\0010!\007\002\000\004\006\004\000\001\006\002\000\001\007\007\000\001\006\004\000\001\006\005\000\027\006\001\000\037\006\001\000\u013F\006\031\000r\006\004\000\f\006\016\000\005\006\t\000\001\006\021\000X\007\005\000\023\007\n\000\001\006\013\000\001\006\001\000\003\006\001\000\001\006\001\000\024\006\001\000,\006\001\000&\006\001\000\005\006\004\000\202\006\001\000\004\007\003\000E\006\001\000&\006\002\000\002\006\006\000\020\006!\000&\006\002\000\001\006\007\000'\006\t\000\021\007\001\000\027\007\001\000\003\007\001\000\001\007\001\000\002\007\001\000\001\007\013\000\033\006\005\000\003\006\r\000\004\007\f\000\006\007\013\000\032\006\005\000\013\006\016\007\007\000\n\007\004\000\002\006\001\007c\006\001\000\001\006\b\007\001\000\006\007\002\006\002\007\001\000\004\007\002\006\n\007\003\006\002\000\001\006\017\000\001\007\001\006\001\007\036\006\033\007\002\000\003\0060\000&\006\013\007\001\006\u014F\000\003\0076\006\002\000\001\007\001\006\020\007\002\000\001\006\004\007\003\000\n\006\002\007\002\000\n\007\021\000\003\007\001\000\b\006\002\000\002\006\002\000\026\006\001\000\007\006\001\000\001\006\003\000\004\006\002\000\001\007\001\006\007\007\002\000\002\007\002\000\003\007\t\000\001\007\004\000\002\006\001\000\003\006\002\007\002\000\n\007\004\006\r\000\003\007\001\000\006\006\004\000\002\006\002\000\026\006\001\000\007\006\001\000\002\006\001\000\002\006\001\000\002\006\002\000\001\007\001\000\005\007\004\000\002\007\002\000\003\007\013\000\004\006\001\000\001\006\007\000\f\007\003\006\f\000\003\007\001\000\t\006\001\000\003\006\001\000\026\006\001\000\007\006\001\000\002\006\001\000\005\006\002\000\001\007\001\006\b\007\001\000\003\007\001\000\003\007\002\000\001\006\017\000\002\006\002\007\002\000\n\007\001\000\001\006\017\000\003\007\001\000\b\006\002\000\002\006\002\000\026\006\001\000\007\006\001\000\002\006\001\000\005\006\002\000\001\007\001\006\006\007\003\000\002\007\002\000\003\007\b\000\002\007\004\000\002\006\001\000\003\006\004\000\n\007\001\000\001\006\020\000\001\007\001\006\001\000\006\006\003\000\003\006\001\000\004\006\003\000\002\006\001\000\001\006\001\000\002\006\003\000\002\006\003\000\003\006\003\000\b\006\001\000\003\006\004\000\005\007\003\000\003\007\001\000\004\007\t\000\001\007\017\000\t\007\t\000\001\006\007\000\003\007\001\000\b\006\001\000\003\006\001\000\027\006\001\000\n\006\001\000\005\006\004\000\007\007\001\000\003\007\001\000\004\007\007\000\002\007\t\000\002\006\004\000\n\007\022\000\002\007\001\000\b\006\001\000\003\006\001\000\027\006\001\000\n\006\001\000\005\006\002\000\001\007\001\006\007\007\001\000\003\007\001\000\004\007\007\000\002\007\007\000\001\006\001\000\002\006\004\000\n\007\022\000\002\007\001\000\b\006\001\000\003\006\001\000\027\006\001\000\020\006\004\000\006\007\002\000\003\007\001\000\004\007\t\000\001\007\b\000\002\006\004\000\n\007\022\000\002\007\001\000\022\006\003\000\030\006\001\000\t\006\001\000\001\006\002\000\007\006\003\000\001\007\004\000\006\007\001\000\001\007\001\000\b\007\022\000\002\007\r\0000\006\001\007\002\006\007\007\004\000\b\006\b\007\001\000\n\007'\000\002\006\001\000\001\006\002\000\002\006\001\000\001\006\002\000\001\006\006\000\004\006\001\000\007\006\001\000\003\006\001\000\001\006\001\000\001\006\002\000\002\006\001\000\004\006\001\007\002\006\006\007\001\000\002\007\001\006\002\000\005\006\001\000\001\006\001\000\006\007\002\000\n\007\002\000\002\006\"\000\001\006\027\000\002\007\006\000\n\007\013\000\001\007\001\000\001\007\001\000\001\007\004\000\002\007\b\006\001\000\"\006\006\000\024\007\001\000\002\007\004\006\004\000\b\007\001\000$\007\t\000\001\0079\000\"\006\001\000\005\006\001\000\002\006\001\000\007\007\003\000\004\007\006\000\n\007\006\000\006\006\004\007F\000&\006\n\000)\006\007\000Z\006\005\000D\006\005\000R\006\006\000\007\006\001\000?\006\001\000\001\006\001\000\004\006\002\000\007\006\001\000\001\006\001\000\004\006\002\000'\006\001\000\001\006\001\000\004\006\002\000\037\006\001\000\001\006\001\000\004\006\002\000\007\006\001\000\001\006\001\000\004\006\002\000\007\006\001\000\007\006\001\000\027\006\001\000\037\006\001\000\001\006\001\000\004\006\002\000\007\006\001\000'\006\001\000\023\006\016\000\t\007.\000U\006\f\000\u026C\006\002\000\b\006\n\000\032\006\005\000K\006\003\000\003\006\017\000\r\006\001\000\004\006\003\007\013\000\022\006\003\007\013\000\022\006\002\007\f\000\r\006\001\000\003\006\001\000\002\007\f\0004\006 \007\003\000\001\006\003\000\002\006\001\007\002\000\n\007!\000\003\007\002\000\n\007\006\000X\006\b\000)\006\001\007V\000\035\006\003\000\f\007\004\000\f\007\n\000\n\007\036\006\002\000\005\006\u038B\000l\006\224\000\234\006\004\000Z\006\006\000\026\006\002\000\006\006\002\000&\006\002\000\006\006\002\000\b\006\001\000\001\006\001\000\001\006\001\000\001\006\001\000\037\006\002\0005\006\001\000\007\006\001\000\001\006\003\000\003\006\001\000\007\006\003\000\004\006\002\000\006\006\004\000\r\006\005\000\003\006\001\000\007\006\017\000\004\007\032\000\005\007\020\000\002\006\023\000\001\006\013\000\004\007\006\000\006\007\001\000\001\006\r\000\001\006 \000\022\006\036\000\r\007\004\000\001\007\003\000\006\007\027\000\001\006\004\000\001\006\002\000\n\006\001\000\001\006\003\000\005\006\006\000\001\006\001\000\001\006\001\000\001\006\001\000\004\006\001\000\003\006\001\000\007\006\003\000\003\006\005\000\005\006\026\000$\006\u0E81\000\003\006\031\000\t\006\006\007\001\000\005\006\002\000\005\006\004\000V\006\002\000\002\007\002\000\003\006\001\000_\006\005\000(\006\004\000^\006\021\000\030\0068\000\020\006\u0200\000\u19B6\006J\000\u51A6\006Z\000\u048D\006\u0773\000\u2BA4\006\u215C\000\u012E\006\002\000;\006\225\000\007\006\f\000\005\006\005\000\001\006\001\007\n\006\001\000\r\006\001\000\005\006\001\000\001\006\001\000\002\006\001\000\002\006\001\000l\006!\000\u016B\006\022\000@\006\002\0006\006(\000\r\006\003\000\020\007\020\000\004\007\017\000\002\006\030\000\003\006\031\000\001\006\006\000\005\006\001\000\207\006\002\000\001\007\004\000\001\006\013\000\n\007\007\000\032\006\004\000\001\006\001\000\032\006\n\000Z\006\003\000\006\006\002\000\006\006\002\000\006\006\002\000\003\006\003\000\002\006\003\000\002\006\022\000\003\007\004\0";
    private static final char ZZ_CMAP[] = zzUnpackCMap("\t\007\001\003\001\002\001\000\001\003\001\001\016\007\004\000\001\003\0014\0018\001\000\001\006\0014\0015\001\000\0010\0010\001\005\0017\0010\001\023\001\021\001\004\001\b\001\016\002\r\004\017\002\t\001/\0010\0013\0011\0012\0010\001\000\001)\001*\001\f\001\020\001\022\001\020\005\006\001\n\005\006\001+\001.\004\006\001\013\002\006\0010\001\024\0010\0014\001\006\001\000\001\030\001\025\001\032\001\"\001\027\001$\001'\001\035\001 \001\006\001\031\001#\001\006\001\037\001\036\001-\001\006\001\026\001\033\001\034\001!\001(\001&\001,\001%\001\006\0010\0016\0010\0010!\007\002\000\004\006\004\000\001\006\002\000\001\007\007\000\001\006\004\000\001\006\005\000\027\006\001\000\037\006\001\000\u013F\006\031\000r\006\004\000\f\006\016\000\005\006\t\000\001\006\021\000X\007\005\000\023\007\n\000\001\006\013\000\001\006\001\000\003\006\001\000\001\006\001\000\024\006\001\000,\006\001\000&\006\001\000\005\006\004\000\202\006\001\000\004\007\003\000E\006\001\000&\006\002\000\002\006\006\000\020\006!\000&\006\002\000\001\006\007\000'\006\t\000\021\007\001\000\027\007\001\000\003\007\001\000\001\007\001\000\002\007\001\000\001\007\013\000\033\006\005\000\003\006\r\000\004\007\f\000\006\007\013\000\032\006\005\000\013\006\016\007\007\000\n\007\004\000\002\006\001\007c\006\001\000\001\006\b\007\001\000\006\007\002\006\002\007\001\000\004\007\002\006\n\007\003\006\002\000\001\006\017\000\001\007\001\006\001\007\036\006\033\007\002\000\003\0060\000&\006\013\007\001\006\u014F\000\003\0076\006\002\000\001\007\001\006\020\007\002\000\001\006\004\007\003\000\n\006\002\007\002\000\n\007\021\000\003\007\001\000\b\006\002\000\002\006\002\000\026\006\001\000\007\006\001\000\001\006\003\000\004\006\002\000\001\007\001\006\007\007\002\000\002\007\002\000\003\007\t\000\001\007\004\000\002\006\001\000\003\006\002\007\002\000\n\007\004\006\r\000\003\007\001\000\006\006\004\000\002\006\002\000\026\006\001\000\007\006\001\000\002\006\001\000\002\006\001\000\002\006\002\000\001\007\001\000\005\007\004\000\002\007\002\000\003\007\013\000\004\006\001\000\001\006\007\000\f\007\003\006\f\000\003\007\001\000\t\006\001\000\003\006\001\000\026\006\001\000\007\006\001\000\002\006\001\000\005\006\002\000\001\007\001\006\b\007\001\000\003\007\001\000\003\007\002\000\001\006\017\000\002\006\002\007\002\000\n\007\001\000\001\006\017\000\003\007\001\000\b\006\002\000\002\006\002\000\026\006\001\000\007\006\001\000\002\006\001\000\005\006\002\000\001\007\001\006\006\007\003\000\002\007\002\000\003\007\b\000\002\007\004\000\002\006\001\000\003\006\004\000\n\007\001\000\001\006\020\000\001\007\001\006\001\000\006\006\003\000\003\006\001\000\004\006\003\000\002\006\001\000\001\006\001\000\002\006\003\000\002\006\003\000\003\006\003\000\b\006\001\000\003\006\004\000\005\007\003\000\003\007\001\000\004\007\t\000\001\007\017\000\t\007\t\000\001\006\007\000\003\007\001\000\b\006\001\000\003\006\001\000\027\006\001\000\n\006\001\000\005\006\004\000\007\007\001\000\003\007\001\000\004\007\007\000\002\007\t\000\002\006\004\000\n\007\022\000\002\007\001\000\b\006\001\000\003\006\001\000\027\006\001\000\n\006\001\000\005\006\002\000\001\007\001\006\007\007\001\000\003\007\001\000\004\007\007\000\002\007\007\000\001\006\001\000\002\006\004\000\n\007\022\000\002\007\001\000\b\006\001\000\003\006\001\000\027\006\001\000\020\006\004\000\006\007\002\000\003\007\001\000\004\007\t\000\001\007\b\000\002\006\004\000\n\007\022\000\002\007\001\000\022\006\003\000\030\006\001\000\t\006\001\000\001\006\002\000\007\006\003\000\001\007\004\000\006\007\001\000\001\007\001\000\b\007\022\000\002\007\r\0000\006\001\007\002\006\007\007\004\000\b\006\b\007\001\000\n\007'\000\002\006\001\000\001\006\002\000\002\006\001\000\001\006\002\000\001\006\006\000\004\006\001\000\007\006\001\000\003\006\001\000\001\006\001\000\001\006\002\000\002\006\001\000\004\006\001\007\002\006\006\007\001\000\002\007\001\006\002\000\005\006\001\000\001\006\001\000\006\007\002\000\n\007\002\000\002\006\"\000\001\006\027\000\002\007\006\000\n\007\013\000\001\007\001\000\001\007\001\000\001\007\004\000\002\007\b\006\001\000\"\006\006\000\024\007\001\000\002\007\004\006\004\000\b\007\001\000$\007\t\000\001\0079\000\"\006\001\000\005\006\001\000\002\006\001\000\007\007\003\000\004\007\006\000\n\007\006\000\006\006\004\007F\000&\006\n\000)\006\007\000Z\006\005\000D\006\005\000R\006\006\000\007\006\001\000?\006\001\000\001\006\001\000\004\006\002\000\007\006\001\000\001\006\001\000\004\006\002\000'\006\001\000\001\006\001\000\004\006\002\000\037\006\001\000\001\006\001\000\004\006\002\000\007\006\001\000\001\006\001\000\004\006\002\000\007\006\001\000\007\006\001\000\027\006\001\000\037\006\001\000\001\006\001\000\004\006\002\000\007\006\001\000'\006\001\000\023\006\016\000\t\007.\000U\006\f\000\u026C\006\002\000\b\006\n\000\032\006\005\000K\006\003\000\003\006\017\000\r\006\001\000\004\006\003\007\013\000\022\006\003\007\013\000\022\006\002\007\f\000\r\006\001\000\003\006\001\000\002\007\f\0004\006 \007\003\000\001\006\003\000\002\006\001\007\002\000\n\007!\000\003\007\002\000\n\007\006\000X\006\b\000)\006\001\007V\000\035\006\003\000\f\007\004\000\f\007\n\000\n\007\036\006\002\000\005\006\u038B\000l\006\224\000\234\006\004\000Z\006\006\000\026\006\002\000\006\006\002\000&\006\002\000\006\006\002\000\b\006\001\000\001\006\001\000\001\006\001\000\001\006\001\000\037\006\002\0005\006\001\000\007\006\001\000\001\006\003\000\003\006\001\000\007\006\003\000\004\006\002\000\006\006\004\000\r\006\005\000\003\006\001\000\007\006\017\000\004\007\032\000\005\007\020\000\002\006\023\000\001\006\013\000\004\007\006\000\006\007\001\000\001\006\r\000\001\006 \000\022\006\036\000\r\007\004\000\001\007\003\000\006\007\027\000\001\006\004\000\001\006\002\000\n\006\001\000\001\006\003\000\005\006\006\000\001\006\001\000\001\006\001\000\001\006\001\000\004\006\001\000\003\006\001\000\007\006\003\000\003\006\005\000\005\006\026\000$\006\u0E81\000\003\006\031\000\t\006\006\007\001\000\005\006\002\000\005\006\004\000V\006\002\000\002\007\002\000\003\006\001\000_\006\005\000(\006\004\000^\006\021\000\030\0068\000\020\006\u0200\000\u19B6\006J\000\u51A6\006Z\000\u048D\006\u0773\000\u2BA4\006\u215C\000\u012E\006\002\000;\006\225\000\007\006\f\000\005\006\005\000\001\006\001\007\n\006\001\000\r\006\001\000\005\006\001\000\001\006\001\000\002\006\001\000\002\006\001\000l\006!\000\u016B\006\022\000@\006\002\0006\006(\000\r\006\003\000\020\007\020\000\004\007\017\000\002\006\030\000\003\006\031\000\001\006\006\000\005\006\001\000\207\006\002\000\001\007\004\000\001\006\013\000\n\007\007\000\032\006\004\000\001\006\001\000\032\006\n\000Z\006\003\000\006\006\002\000\006\006\002\000\006\006\002\000\003\006\003\000\002\006\003\000\002\006\022\000\003\007\004\0");
    private static final int ZZ_ACTION[] = zzUnpackAction();
    private static final String ZZ_ACTION_PACKED_0 = "\002\000\003\001\002\002\001\003\002\004\002\002\021\003\006\002\001\005\001\006\002\007\001\001\001\b\001\t\001\000\001\n\003\004\001\000\003\004\001\000\n\003\001\013\013\003\001\002\001\f\002\006\002\t\002\000\004\004\001\000\023\003\001\006\001\000\002\004\013\003\002\004\005\003\001\n\003\003\002\004\005\003\b\004\001\000\001\004\001\000\001\004\001\000\001\004\001\000\001\004\001\000\001\004\001\000\001\004\001\000\001\004\001\000\005\004";
    private static final int ZZ_ROWMAP[] = zzUnpackRowMap();
    private static final String ZZ_ROWMAP_PACKED_0 = "\000\000\0009\000r\000\253\000\344\000\u011D\000\u0156\000\u018F\000\u01C8\000\u0201\000\u023A\000\u0273\000\u02AC\000\u02E5\000\u031E\000\u0357\000\u0390\000\u03C9\000\u0402\000\u043B\000\u0474\000\u04AD\000\u04E6\000\u051F\000\u0558\000\u0591\000\u05CA\000\u0603\000\u063C\000r\000\u0675\000\u06AE\000\u06E7\000\u0720\000\u0759\000r\000\u0792\000\u07CB\000r\000\u0804\000r\000\u083D\000\u0876\000r\000\u08AF\000\u08E8\000r\000\u0921\000\u095A\000\u0993\000\u09CC\000\u0A05\000\u0A3E\000\u0A77\000\u0AB0\000\u0AE9\000\u0B22\000\u0B5B\000\u0B94\000\u0BCD\000\u0C06\000\u0C3F\000\u018F\000\u0C78\000\u0CB1\000\u0CEA\000\u0D23\000\u0D5C\000\u0D95\000\u0DCE\000\u0E07\000\u0E40\000\u0E79\000\u0EB2\000\u0EEB\000r\000\u0F24\000\u0F5D\000\u0F96\000r\000\u0FCF\000\u1008\000\u1041\000\u107A\000\u10B3\000\u10EC\000\u1125\000\u115E\000\u1197\000\u11D0\000\u1209\000\u1242\000\u127B\000\u12B4\000\u12ED\000\u1326\000\u135F\000\u1398\000\u13D1\000\u140A\000\u1443\000\u147C\000\u14B5\000\u14EE\000\u1527\000\u1560\000r\000\u1599\000\u15D2\000\u160B\000\u1644\000\u167D\000\u16B6\000\u16EF\000\u1728\000\u1761\000\u179A\000\u17D3\000\u180C\000\u1845\000\u187E\000\u18B7\000\u18F0\000\u1929\000\u1962\000\u199B\000\u19D4\000\u1A0D\000\u018F\000\u1A46\000\u1A7F\000\u1AB8\000\u1AF1\000\u1B2A\000\u1B63\000\u1B9C\000\u1BD5\000\u1C0E\000\u1C47\000\u1C80\000\u1CB9\000\u1CF2\000\u1D2B\000\u1D64\000\u1D9D\000\u1DD6\000\u1E0F\000\u1E48\000\u1E81\000\u1EBA\000\u1EF3\000\u1F2C\000\u1F65\000\u1F9E\000\u1FD7\000\u2010\000\u2049\000\u2082\000\u20BB\000\u20F4\000\u212D\000\u2166\000\u219F\000\u21D8\000\u2211\000\u224A\000\u2283";
    private static final int ZZ_TRANS[] = zzUnpackTrans();
    private static final String ZZ_TRANS_PACKED_0 = "\001\003\001\004\001\003\001\005\001\006\001\007\001\b\001\003\001\t\001\n\003\b\003\n\001\b\001\013\001\b\001\f\001\003\001\r\001\016\001\017\002\b\001\020\001\021\001\022\002\b\001\023\001\024\001\b\001\025\001\b\001\026\001\b\001\027\001\030\001\031\001\032\001\033\001\034\002\b\001\035\002\036\001\007\001\037\001 \001\007\001!\001\"\001#\001$\001%\001&\001'\021%\001(#%\001);\000\001\0039\000\001\0059\000\001*\001++\000\001\0368\000\001\036\r\000\013\b\001\000\001\b\002\000\032\b\001,\021\000\001-\001.\001/\0010\001\000\0011\0012\0011\001/\0013\0014\004\000\0014\n\000\003/\007\000\0010\024\000\002\n\001/\002\000\003\n\001/\0013\0014\004\000\0014\n\000\003/\034\000\0023\003\000\0033<\000\001\036\035\000\001\036\r\000\013\b\001\000\001\b\002\000\001\b\0015\030\b\001,\017\000\013\b\001\000\001\b\002\000\002\b\0016\027\b\001,\017\000\013\b\001\000\001\b\002\000\016\b\0017\013\b\001,\017\000\013\b\001\000\001\b\002\000\003\b\0018\005\b\0019\020\b\001,\017\000\013\b\001\000\001\b\002\000\021\b\001:\b\b\001,\017\000\013\b\001\000\001\b\002\000\001\b\001;\006\b\001<\021\b\001,\017\000\013\b\001\000\001\b\002\000\002\b\001=\t\b\001>\r\b\001,\017\000\013\b\001\000\001\b\002\000\n\b\001?\004\b\001?\n\b\001,\017\000\013\b\001\000\001\b\002\000\002\b\001@\006\b\001?\020\b\001,\017\000\013\b\001\000\001\b\002\000\003\b\001\017\005\b\001A\001\b\001B\001C\r\b\001,\017\000\013\b\001\000\001\b\002\000\b\b\001D\002\b\001E\016\b\001,\017\000\013\b\001\000\001\b\002\000\t\b\001F\020\b\001,\017\000\013\b\001\000\001\b\002\000\003\b\001A\026\b\001,\017\000\013\b\001\000\001\b\002\000\001\b\001G\030\b\001,\017\000\013\b\001\000\001\b\002\000\t\b\001H\020\b\001,\017\000\013\b\001\000\001\b\002\000\002\b\001I\027\b\001,\017\000\013\b\001\000\001\b\002\000\007\b\001J\022\b\001,:\000\001\036\001K7\000\001\036\001\000\001\0076\000\001\036\003\000\001\0364\000\001\036\004\000\001\0363\000\001\036\005\000\001\036\001\000\001%\002\000\021%\001\000#%\003\000\001'6\000\002L\001\000\005L\001M\004L\002M\001N)L\001*\001O\001P6*\005Q\001R3Q\b\000\001-\001.\001/\002\000\0011\0012\0011\001/\0013\0014\004\000\0014\n\000\003/\034\000\002.\003\000\003.\001/\0013\0014\004\000\0014\n\000\001/\001\000\001/\034\000\001S\001T\002\000\005T\001\000\001T\002\000\001T\001\000\002T\001\000\001T\007\000\001T\001\000\001T\004\000\002T\026\000\001U\001.\001/\002\000\003U\001/\0013\0014\004\000\0014\n\000\003/\034\000\0011\001.\001/\002\000\0031\001/\0013\0014\004\000\0014\n\000\003/\034\000\0023\003\000\0033\001/\001\000\0014\004\000\0014\n\000\001/\001\000\001/\034\000\002V\003\000\003V\003\000\001W#\000\001W\007\000\013\b\001\000\001\b\002\000\002\b\001X\027\b\001,\017\000\013\b\001\000\001\b\002\000\007\b\001Y\022\b\001,\017\000\013\b\001\000\001\b\002\000\006\b\001Z\023\b\001,\017\000\013\b\001\000\001\b\002\000\006\b\001Z\001[\022\b\001,\017\000\013\b\001\000\001\b\002\000\n\b\001\\\017\b\001,\017\000\013\b\001\000\001\b\002\000\013\b\001]\016\b\001,\017\000\013\b\001\000\001\b\002\000\f\b\001Z\003\b\001?\t\b\001,\017\000\013\b\001\000\001\b\002\000\013\b\001^\016\b\001,\017\000\013\b\001\000\001\b\002\000\021\b\001?\b\b\001,\017\000\013\b\001\000\001\b\002\000\016\b\001_\013\b\001,\017\000\013\b\001\000\001\b\002\000\016\b\001`\001a\n\b\001,\017\000\013\b\001\000\001\b\002\000\001\b\001?\030\b\001,\017\000\013\b\001\000\001\b\002\000\n\b\001b\017\b\001,\017\000\013\b\001\000\001\b\002\000\n\b\001c\017\b\001,\017\000\013\b\001\000\001\b\002\000\013\b\001d\016\b\001,\017\000\013\b\001\000\001\b\002\000\007\b\001e\022\b\001,\017\000\013\b\001\000\001\b\002\000\007\b\001f\022\b\001,\017\000\013\b\001\000\001\b\002\000\001\b\001g\030\b\001,\017\000\013\b\001\000\001\b\002\000\t\b\001h\020\b\001,\017\000\013\b\001\000\001\b\002\000\022\b\001i\007\b\001,\017\000\013\b\001\000\001\b\002\000\001\b\001j\030\b\001,:\000\001\036\001\007\016\000\001N\004\000\003N1\000\001k\004\000\003k+\000\001P6\000\005Q\001l3Q\004\000\001P\001R;\000\001S\001T\001/\001\000\005T\001\000\001T\002\000\001T\001\000\002T\001\000\001T\007\000\001T\001/\001T\004\000\002T\026\000\002m\001/\001\000\005m\001\000\001m\002\000\001m\001\000\002m\001\000\001m\007\000\001m\001/\001m\004\000\002m\026\000\001n\001.\001/\002\000\003n\001/\0013\0014\004\000\0014\n\000\003/\034\000\002V\003\000\003V\001/\021\000\001/\001\000\001/\034\000\002V\003\000\003V/\000\013\b\001\000\001\b\002\000\003\b\001o\026\b\001,\017\000\013\b\001\000\001\b\002\000\f\b\001p\r\b\001,\017\000\013\b\001\000\001\b\002\000\002\b\001?\027\b\001,\017\000\013\b\001\000\001\b\002\000\005\b\001e\024\b\001,\017\000\013\b\001\000\001\b\002\000\007\b\001q\022\b\001,\017\000\013\b\001\000\001\b\002\000\007\b\001[\022\b\001,\017\000\013\b\001\000\001\b\002\000\006\b\001?\023\b\001,\017\000\013\b\001\000\001\b\002\000\016\b\001?\013\b\001,\017\000\013\b\001\000\001\b\002\000\002\b\001r\027\b\001,\017\000\013\b\001\000\001\b\002\000\003\b\001s\026\b\001,\017\000\013\b\001\000\001\b\002\000\003\b\001t\026\b\001,\017\000\013\b\001\000\001\b\002\000\005\b\001u\024\b\001,\017\000\013\b\001\000\001\b\002\000\016\b\001Z\013\b\001,\017\000\013\b\001\000\001\b\002\000\b\b\001?\021\b\001,\017\000\013\b\001\000\001\b\002\000\t\b\001?\020\b\001,\017\000\013\b\001\000\001\b\002\000\003\b\001v\026\b\001,\017\000\013\b\001\000\001\b\002\000\016\b\001w\013\b\001,\017\000\013\b\001\000\001x\002\000\032\b\001,\017\000\013\b\001\000\001\b\002\000\013\b\001y\016\b\001,\t\000\004Q\001P\001l3Q\b\000\002z\001/\001\000\005z\001\000\001z\002\000\001z\001\000\002z\001\000\001z\007\000\001z\001/\001z\004\000\002z\026\000\001{\001.\001/\002\000\003{\001/\0013\0014\004\000\0014\n\000\003/\032\000\013\b\001\000\001\b\002\000\004\b\001?\025\b\001,\017\000\013\b\001\000\001\b\002\000\001\b\001|\030\b\001,\017\000\013\b\001\000\001\b\002\000\013\b\001}\016\b\001,\017\000\013\b\001\000\001\b\002\000\007\b\001Z\022\b\001,\017\000\013\b\001\000\001\b\002\000\f\b\001~\r\b\001,\017\000\013\b\001\000\001\b\002\000\016\b\001\177\013\b\001,\017\000\013\b\001\000\001\b\002\000\007\b\001\200\022\b\001,\017\000\013\b\001\000\001\b\002\000\020\b\001\201\t\b\001,\017\000\013\b\001\000\001\b\002\000\002\b\001\202\027\b\001,\017\000\013\b\001\000\001\b\002\000\027\b\001\203\002\b\001,\017\000\013\b\001\000\001\b\002\000\n\b\001\204\017\b\001,\021\000\002\205\001/\001\000\005\205\001\000\001\205\002\000\001\205\001\000\002\205\001\000\001\205\007\000\001\205\001/\001\205\004\000\002\205\026\000\001\206\001.\001/\002\000\003\206\001/\0013\0014\004\000\0014\n\000\003/\032\000\013\b\001\000\001\b\002\000\n\b\001?\017\b\001,\017\000\013\b\001\000\001\b\002\000\n\b\001\207\017\b\001,\017\000\013\b\001\000\001\b\002\000\016\b\001\210\013\b\001,\017\000\013\b\001\000\001\b\002\000\016\b\001\211\013\b\001,\017\000\013\b\001\000\001\b\002\000\013\b\001\212\016\b\001,\017\000\013\b\001\000\001\b\002\000\003\b\001\213\026\b\001,\017\000\013\b\001\000\001\b\002\000\030\b\001\201\001\b\001,\017\000\013\b\001\000\001\b\002\000\022\b\001\201\007\b\001,\021\000\002\214\001/\001\000\005\214\001\000\001\214\002\000\001\214\001\000\002\214\001\000\001\214\007\000\001\214\001/\001\214\004\000\002\214\026\000\001\215\001.\001/\002\000\003\215\001/\0013\0014\004\000\0014\n\000\003/\032\000\013\b\001\000\001\b\002\000\f\b\001Z\r\b\001,\017\000\013\b\001\000\001\b\002\000\007\b\001?\022\b\001,\017\000\013\b\001\000\001\b\002\000\020\b\001?\t\b\001,\017\000\013\b\001\000\001\b\002\000\t\b\001|\020\b\001,\017\000\013\b\001\000\001\b\002\000\n\b\001\201\017\b\001,\021\000\002\216\001/\001\000\005\216\001\000\001\216\002\000\001\216\001\000\002\216\001\000\001\216\007\000\001\216\001/\001\216\004\000\002\216\026\000\001\217\001.\001/\002\000\003\217\001/\0013\0014\004\000\0014\n\000\003/\034\000\002\220\001/\001\000\005\220\001\000\001\220\002\000\001\220\001\000\002\220\001\000\001\220\007\000\001\220\001/\001\220\004\000\002\220\026\000\001\221\001.\001/\002\000\003\221\001/\0013\0014\004\000\0014\n\000\003/\034\000\002\222\001/\001\000\005\222\001\000\001\222\002\000\001\222\001\000\002\222\001\000\001\222\007\000\001\222\001/\001\222\004\000\002\222\026\000\001\223\001.\001/\002\000\003\223\001/\0013\0014\004\000\0014\n\000\003/\034\000\002\224\001/\001\000\005\224\001\000\001\224\002\000\001\224\001\000\002\224\001\000\001\224\007\000\001\224\001/\001\224\004\000\002\224\026\000\001\225\001.\001/\002\000\003\225\001/\0013\0014\004\000\0014\n\000\003/\034\000\002\226\001/\001\000\005\226\001\000\001\226\002\000\001\226\001\000\002\226\001\000\001\226\007\000\001\226\001/\001\226\004\000\002\226\026\000\001\227\001.\001/\002\000\003\227\001/\0013\0014\004\000\0014\n\000\003/\034\000\002\230\001/\001\000\005\230\001\000\001\230\002\000\001\230\001\000\002\230\001\000\001\230\007\000\001\230\001/\001\230\004\000\002\230\026\000\001\231\001.\001/\002\000\003\231\001/\0013\0014\004\000\0014\n\000\003/\034\000\002\232\001/\001\000\005\232\001\000\001\232\002\000\001\232\001\000\002\232\001\000\001\232\007\000\001\232\001/\001\232\004\000\002\232\026\000\001\233\001.\001/\002\000\003\233\001/\0013\0014\004\000\0014\n\000\003/\034\000\002\234\001/\001\000\005\234\001\000\001\234\002\000\001\234\001\000\002\234\001\000\001\234\007\000\001\234\001/\001\234\004\000\002\234\026\000\001\235\001.\001/\002\000\003\235\001/\0013\0014\004\000\0014\n\000\003/\034\000\002\236\001/\001\000\005\236\001\000\001\236\002\000\001\236\001\000\002\236\001\000\001\236\007\000\001\236\001/\001\236\004\000\002\236\026\000\001\237\001.\001/\002\000\003\237\001/\0013\0014\004\000\0014\n\000\003/\034\000\002\240\001/\001\000\005\240\001\000\001\240\002\000\001\240\001\000\002\240\001\000\001\240\007\000\001\240\001/\001\240\004\000\002\240\026\000\001\241\001.\001/\002\000\003\241\001/\0013\0014\004\000\0014\n\000\003/\034\000\002\242\001/\001\000\005\242\001\000\001\242\002\000\001\242\001\000\002\242\001\000\001\242\007\000\001\242\001/\001\242\004\000\002\242\026\000\001\243\001.\001/\002\000\003\243\001/\0013\0014\004\000\0014\n\000\003/\036\000\001/\030\000\001/\035\000\001\244\001.\001/\002\000\003\244\001/\0013\0014\004\000\0014\n\000\003/\034\000\001\245\001.\001/\002\000\003\245\001/\0013\0014\004\000\0014\n\000\003/\034\000\001\246\001.\001/\002\000\003\246\001/\0013\0014\004\000\0014\n\000\003/\034\000\001\247\001.\001/\002\000\003\247\001/\0013\0014\004\000\0014\n\000\003/\034\000\002.\001/\002\000\003.\001/\0013\0014\004\000\0014\n\000\003/\024\0";
    private static final int ZZ_UNKNOWN_ERROR = 0;
    private static final int ZZ_NO_MATCH = 1;
    private static final int ZZ_PUSHBACK_2BIG = 2;
    private static final String ZZ_ERROR_MSG[] = {
        "Unkown internal scanner error", "Error: could not match input", "Error: pushback value was too large"
    };
    private static final int ZZ_ATTRIBUTE[] = zzUnpackAttribute();
    private static final String ZZ_ATTRIBUTE_PACKED_0 = "\002\000\001\t\032\001\001\t\005\001\001\t\002\001\001\t\001\001\001\t\001\001\001\000\001\t\002\001\001\t\001\000\003\001\001\000\027\001\001\t\003\001\001\t\002\000\004\001\001\000\023\001\001\t\001\000'\001\001\000\001\001\001\000\001\001\001\000\001\001\001\000\001\001\001\000\001\001\001\000\001\001\001\000\001\001\001\000\005\001";
    private Reader zzReader;
    private int zzState;
    private int zzLexicalState;
    private char zzBuffer[];
    private int zzMarkedPos;
    private int zzCurrentPos;
    private int zzStartRead;
    private int zzEndRead;
    private int yyline;
    private int yychar;
    private int yycolumn;
    private boolean zzAtBOL;
    private boolean zzAtEOF;
    private boolean zzEOFDone;

}
