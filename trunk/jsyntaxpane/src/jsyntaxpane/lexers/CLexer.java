// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   CLexer.java

package jsyntaxpane.lexers;

import java.io.*;
import jsyntaxpane.Token;
import jsyntaxpane.TokenType;

// Referenced classes of package jsyntaxpane.lexers:
//            DefaultJFlexLexer

public final class CLexer extends DefaultJFlexLexer
{

    private static int[] zzUnpackAction()
    {
        int result[] = new int[236];
        int offset = 0;
        offset = zzUnpackAction("\001\000\001\001\003\002\002\003\003\002\002\004\005\002\001\003\013\002\002\001\001\005\001\006\001\007\001\b\001\t\001\n\002\003\001\013\001\000\001\002\006\000\007\004\001\000\001\002\004\004\013\002\001\f\021\002\001\f\007\002\001\000\001\r\003\000\002\013\t\000\001\016\003\000\001\004\001\000\001\004#\002\001\017\007\002\n\000\024\002\001\004\b\002\001\000\001\016\004\000\016\002\003\000\004\002\001\017\005\002", offset, result);
        return result;
    }

    private static int zzUnpackAction(String packed, int offset, int result[])
    {
        int i = 0;
        int j = offset;
        for(int l = packed.length(); i < l;)
        {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            do
                result[j++] = value;
            while(--count > 0);
        }

        return j;
    }

    private static int[] zzUnpackRowMap()
    {
        int result[] = new int[236];
        int offset = 0;
        offset = zzUnpackRowMap("\000\000\000:\000t\000:\000\256\000\350\000:\000\u0122\000\u015C\000\u0196\000\u01D0\000\u020A\000\u0244\000\u027E\000\u02B8\000\u02F2\000\u032C\000\u0366\000\u03A0\000\u03DA\000\u0414\000\u044E\000\u0488\000\u04C2\000\u04FC\000\u0536\000\u0570\000\u05AA\000\u05E4\000\u061E\000\u0658\000:\000:\000:\000:\000:\000:\000\u0692\000\u06CC\000\u0706\000\u0740\000\u077A\000\u07B4\000\u07EE\000\u0828\000\u0862\000\u089C\000\u08D6\000\u0910\000\u094A\000\u0984\000\u09BE\000:\000\u077A\000\u09F8\000\u0A32\000\u0A6C\000\u0AA6\000\u0AE0\000\u0B1A\000\u0B54\000\u0B8E\000\u0BC8\000\u0C02\000\u0C3C\000\u0C76\000\u0CB0\000\u0CEA\000\u0D24\000\u0D5E\000\u0D98\000\u0DD2\000\u0E0C\000\u0E46\000\u0E80\000\u0EBA\000\u0EF4\000\u0F2E\000\u0F68\000\u0FA2\000\u0FDC\000\u1016\000\u1050\000\u108A\000\u10C4\000\u10FE\000\u1138\000\u1172\000\u11AC\000\u11E6\000\u015C\000\u1220\000\u125A\000\u1294\000\u12CE\000\u1308\000\u1342\000\u137C\000\u061E\000:\000\u13B6\000\u0658\000\u13F0\000\u142A\000:\000\u1464\000\u149E\000\u14D8\000\u1512\000\u154C\000\u1586\000\u15C0\000\u15FA\000\u1634\000\u166E\000\u16A8\000\u16E2\000\u171C\000\u1756\000\u1790\000\u17CA\000\u1804\000\u183E\000\u1878\000\u18B2\000\u18EC\000\u1926\000\u1960\000\u199A\000\u19D4\000\u1A0E\000\u1A48\000\u1A82\000\u1ABC\000\u1AF6\000\u1B30\000\u1B6A\000\u1BA4\000\u1BDE\000\u1C18\000\u1C52\000\u1C8C\000\u1CC6\000\u1D00\000\u1D3A\000\u1D74\000\u1DAE\000\u1DE8\000\u1E22\000\u1E5C\000\u1E96\000\u1ED0\000\u1F0A\000\u1F44\000\u1F7E\000\u1FB8\000\u015C\000\u1FF2\000\u202C\000\u2066\000\u20A0\000\u20DA\000\u2114\000\u214E\000\u2188\000\u21C2\000\u21FC\000\u2236\000\u2270\000\u22AA\000\u22E4\000\u231E\000\u2358\000\u2392\000\u23CC\000\u2406\000\u2440\000\u247A\000\u24B4\000\u24EE\000\u2528\000\u2562\000\u259C\000\u25D6\000\u2610\000\u264A\000\u2684\000\u26BE\000\u26F8\000\u2732\000\u276C\000\u27A6\000\u27E0\000\u281A\000\u015C\000\u2854\000\u288E\000\u28C8\000\u2902\000\u293C\000\u2976\000\u29B0\000\u29EA\000\u2A24\000:\000\u2A5E\000\u2A98\000\u2AD2\000\u2B0C\000\u2B46\000\u2B80\000\u2BBA\000\u2BF4\000\u2C2E\000\u2C68\000\u2CA2\000\u2CDC\000\u2D16\000\u2D50\000\u2D8A\000\u2DC4\000\u2DFE\000\u2E38\000\u2E72\000\u2EAC\000\u2EE6\000\u2F20\000\u2F5A\000\u2F94\000\u2FCE\000\u3008\000\u3042\000\u307C\000\u30B6\000\u30F0\000\u312A", offset, result);
        return result;
    }

    private static int zzUnpackRowMap(String packed, int offset, int result[])
    {
        int i = 0;
        int j = offset;
        for(int l = packed.length(); i < l;)
        {
            int high = packed.charAt(i++) << 16;
            result[j++] = high | packed.charAt(i++);
        }

        return j;
    }

    private static int[] zzUnpackTrans()
    {
        int result[] = new int[12644];
        int offset = 0;
        offset = zzUnpackTrans("\001\002\001\003\001\004\001\005\001\006\001\007\001\b\001\t\001\n\001\002\001\013\001\n\001\f\001\t\001\n\001\r\001\n\001\013\001\016\001\n\001\017\001\n\001\020\001\n\001\021\001\022\001\023\001\n\001\007\001\024\001\025\002\t\001\026\001\027\002\t\001\030\001\031\001\032\001\033\002\t\001\034\001\t\001\035\001\036\001\002\001\037\001 \001!\001\"\001#\001$\001%\001\007\001&\001'<\000\001\004:\000\001\005:\000\001(\001):\000\001*\001\000\001*\001\000\003*\001\000\001*\001\000\002*\001+\001*\001,\001*\001\000\001*\001-\001\000\001.\001*\n\000\001/\005\000\0010\024\000\022\t\001\000\002\t\001\000\021\t\022\000\001*\001\t\001\n\001\t\003\n\001\t\001\n\001\t\002\n\001\t\001\n\001\t\001\n\001\t\001\n\001\t\001\000\001\t\001\n\001\000\021\t\022\000\001*\001\000\001*\001\000\001\013\001*\001\013\001\000\001*\001\000\001*\001\013\0011\0012\0013\0014\0015\0016\0015\0017\0018\0019$\000\001*\001\000\001*\001\000\001:\001*\001;\001<\001=\001\000\001*\001;\0011\0012\0013\0014\0015\0016\0015\0017\0018\0019%\000\022\t\001\000\002\t\001\000\002\t\001>\003\t\001?\001@\t\t\023\000\013\t\001A\006\t\001\000\002\t\001\000\004\t\001B\003\t\001C\b\t\023\000\022\t\001\000\002\t\001\000\007\t\001D\t\t\023\000\r\t\001E\004\t\001\000\002\t\001\000\002\t\001F\004\t\001G\t\t\023\000\022\t\001\000\001H\001\t\001\000\007\t\001I\t\t\026\000\0017\001\000\0017\004\000\0017/\000\006\t\001J\006\t\001K\004\t\001\000\002\t\001\000\b\t\001L\b\t\023\000\022\t\001\000\002\t\001\000\001\t\001M\005\t\001N\t\t\023\000\022\t\001\000\001O\001\t\001\000\021\t\023\000\022\t\001\000\001P\001\t\001\000\002\t\001Q\002\t\001R\001S\002\t\001T\004\t\001U\002\t\023\000\022\t\001\000\001V\001\t\001\000\001\t\001W\004\t\001X\005\t\001Y\004\t\023\000\022\t\001\000\002\t\001\000\007\t\001Z\t\t\023\000\017\t\001[\002\t\001\000\002\t\001\000\b\t\001\\\b\t\023\000\022\t\001\000\002\t\001\000\007\t\001]\t\t\023\000\013\t\001^\006\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\006\t\001_\n\t\023\000\022\t\001\000\002\t\001\000\002\t\001`\004\t\001a\001\t\001b\007\t\f\000\002c\001d+c\001d\001e\nc\002f\001d,f\001g\001d\tf8\000\001\007:\000\001\007\001(\001h\001i7(\005j\001k4j\006\000\001*\001\000\001*\001\000\003*\001\000\001*\001\000\002*\001\000\001*\001\000\001*\001\000\001*\003\000\001*?\000\001l\003\000\001m:\000\001n-\000\001o3\000\001p\t\000\001q\006\000\001r*\000\001s\016\000\001t\002\000\001u/\000\001v-\000\0025\0023*\000\001*\001\000\001*\001\000\003*\001\000\001*\001\000\002*\0015\0016\0013\0014\001\000\001*\003\000\001*0\000\0025,\000\001*\001\000\001*\001\000\003*\001\000\001*\001\000\002*\0015\0016\001\000\001*\001\000\001*\003\000\001*(\000\0017\001\000\0017\004\000\0017\004\000\0035\001\000\0028(\000\001w\001\000\001w\004\000\001w\n\000\001x#\000\001*\001\000\001*\001\000\001y\001*\001y\001\000\001*\001\000\001*\001y\001\000\001*\001\000\001*\001\000\001*\003\000\001*\001xt\001\000\002\t\001\000\004\t\001z\001{\013\t\023\000\022\t\001\000\002\t\001\000\002\t\001|\016\t\023\000\022\t\001\000\002\t\001\000\b\t\001}\b\t\023\000\022\t\001\000\002\t\001\000\t\t\001~\007\t\023\000\022\t\001\000\002\t\001\000\t\t\001\177\007\t\023\000\022\t\001\000\002\t\001\000\004\t\001\200\004\t\001\201\007\t\023\000\022\t\001\000\002\t\001\000\b\t\001\202\b\t\023\000\022\t\001\000\002\t\001\000\007\t\001\203\t\t\023\000\r\t\001\204\004\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\001\t\001[\017\t\023\000\017\t\001\205\002\t\001\000\002\t\001\000\021\t\023\000\013\t\001\206\006\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\005\t\001\207\013\t\023\000\022\t\001\000\002\t\001\000\004\t\001z\f\t\023\000\013\t\001\210\006\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\001\211\001\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\007\t\001\212\t\t\023\000\022\t\001\000\002\t\001\000\005\t\001\213\004\t\001\214\006\t\023\000\r\t\001\215\004\t\001\000\002\t\001\000\002\t\001\216\016\t\023\000\017\t\001\217\002\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\001\t\001\220\001\221\016\t\023\000\022\t\001\000\002\t\001\000\007\t\001\222\t\t\023\000\022\t\001\000\002\t\001\000\n\t\001\223\002\t\001\224\003\t\023\000\022\t\001\000\002\t\001\000\t\t\001\225\007\t\023\000\022\t\001\000\002\t\001\000\013\t\001\226\005\t\023\000\013\t\001\227\006\t\001\000\002\t\001\000\f\t\001[\004\t\023\000\022\t\001\000\002\t\001\000\001\t\001\230\007\t\001\231\007\t\023\000\022\t\001\000\002\t\001\000\017\t\001\232\001\t\023\000\022\t\001\000\002\t\001\000\t\t\001\233\007\t\023\000\r\t\001\234\004\t\001\000\002\t\001\000\005\t\001\235\013\t\023\000\022\t\001\000\002\t\001\000\005\t\001\236\013\t\023\000\022\t\001\000\002\t\001\000\005\t\001\237\013\t\023\000\022\t\001\000\002\t\001\000\t\t\001\240\007\t\023\000\r\t\001\241\004\t\001\000\002\t\001\000\021\t\023\000\r\t\001\242\004\t\001\000\002\t\001\000\t\t\001\243\007\t\023\000\022\t\001\000\002\t\001\000\001\t\001\244\017\t\f\000\002c\001d7c\002f\001d7f\002\000\001i7\000\005j\001\2454j\004\000\001i\001kZ\000\001\246+\000\001\247F\000\001\250*\000\001,D\000\001\250\004\000\001\2511\000\001\2523\000\001\2539\000\001\247\f\000\001m#\000\001\254V\000\001\255,\000\001\256$\000\001w\001\000\001w\004\000\001w\004\000\0035+\000\001w\001\000\001w\004\000\001w.\000\001*\001\000\001*\001\000\001y\001*\001y\001\000\001*\001\000\001*\001y\001\000\001*\001\000\001*\0015\0016\0015\002\000\001*%\000\022\t\001\000\001[\001\t\001\000\021\t\023\000\b\t\001\257\t\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\001\t\001\235\017\t\023\000\022\t\001\000\002\t\001\000\004\t\001\260\001\261\013\t\023\000\021\t\001[\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\b\t\001\262\b\t\023\000\022\t\001\000\002\t\001\000\t\t\001\263\007\t\023\000\022\t\001\000\002\t\001\000\007\t\001\264\t\t\023\000\022\t\001\000\002\t\001\000\n\t\001\235\006\t\023\000\022\t\001\000\002\t\001\000\002\t\001\260\016\t\023\000\022\t\001\000\002\t\001\000\004\t\001\227\f\t\023\000\022\t\001\000\002\t\001\000\002\t\001\265\016\t\023\000\022\t\001\000\002\t\001\000\001\266\020\t\023\000\022\t\001\000\001\267\001\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\013\t\001[\005\t\023\000\022\t\001\000\002\t\001\000\002\t\001\270\016\t\023\000\r\t\001\235\004\t\001\000\002\t\001\000\021\t\023\000\013\t\001\271\006\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\t\t\001\272\007\t\023\000\022\t\001\000\001\273\001\t\001\000\021\t\023\000\r\t\001\274\004\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\001\275\001\t\001\000\021\t\023\000\013\t\001\276\006\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\005\t\001\277\013\t\023\000\022\t\001\000\002\t\001\000\001\t\001\260\017\t\023\000\022\t\001\000\002\t\001\000\b\t\001\300\b\t\023\000\022\t\001\000\001\301\001\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\005\t\001{\013\t\023\000\022\t\001\000\002\t\001\000\017\t\001\302\001\t\023\000\022\t\001\000\001\303\001\t\001\000\021\t\023\000\022\t\001\000\001\304\001\t\001\000\007\t\001\305\t\t\023\000\022\t\001\000\002\t\001\000\004\t\001[\f\t\023\000\022\t\001\000\001\306\001\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\b\t\001\307\b\t\023\000\022\t\001\000\002\t\001\000\t\t\001\310\007\t\023\000\022\t\001\000\002\t\001\000\007\t\001[\t\t\023\000\022\t\001\000\002\t\001\000\002\t\001\311\016\t\023\000\r\t\001z\004\t\001\000\002\t\001\000\021\t\023\000\013\t\001z\006\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\002\t\001\312\016\t\023\000\021\t\001\235\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\005\t\001\313\013\t\f\000\004j\001i\001\2454j%\000\001\314.\000\001\2519\000\001\3155\000\001\315G\000\001\316;\000\001\251'\000\001\317I\000\001\320<\000\001\321\031\000\022\t\001\000\002\t\001\000\006\t\001[\n\t\023\000\022\t\001\000\002\t\001\000\005\t\001\235\013\t\023\000\022\t\001\000\002\t\001\000\t\t\001\322\007\t\023\000\022\t\001\000\002\t\001\000\n\t\001[\006\t\023\000\022\t\001\000\002\t\001\000\n\t\001\223\006\t\023\000\022\t\001\000\002\t\001\000\b\t\001\235\b\t\023\000\013\t\001\323\006\t\001\000\002\t\001\000\021\t\023\000\r\t\001\324\004\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\001\t\001\264\017\t\023\000\022\t\001\000\002\t\001\000\003\t\001[\r\t\023\000\022\t\001\000\002\t\001\000\001\t\001\325\017\t\023\000\022\t\001\000\002\t\001\000\004\t\001\326\f\t\023\000\b\t\001\327\t\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\001~\001\t\001\000\021\t\023\000\b\t\001\330\t\t\001\000\002\t\001\000\021\t\023\000\b\t\001\260\t\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\t\t\001\331\007\t\023\000\022\t\001\000\001\243\001\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\007\t\001\332\t\t\023\000\r\t\001\333\004\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\002\t\001~\016\t\023\000\022\t\001\000\002\t\001\000\016\t\001[\002\t\023\000\021\t\001\334\001\000\002\t\001\000\b\t\001\335\001~\007\t\023\000\r\t\001\234\004\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\b\t\001z\b\t\023\000\022\t\001\000\002\t\001\000\001\240\020\t\023\000\022\t\001\000\002\t\001\000\005\t\001\336\013\t\023\000\013\t\001\337\006\t\001\000\002\t\001\000\021\t3\000\001\3150\000\001\315-\000\001\340E\000\001\341C\000\001\342\030\000\022\t\001\000\002\t\001\000\b\t\001\241\b\t\023\000\r\t\001\343\004\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\001\235\001\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\b\t\001[\b\t\023\000\022\t\001\000\002\t\001\000\005\t\001\344\013\t\023\000\022\t\001\000\002\t\001\000\005\t\001\345\013\t\023\000\022\t\001\000\002\t\001\000\002\t\001\346\016\t\023\000\b\t\001\347\t\t\001\000\002\t\001\000\021\t\023\000\017\t\001[\002\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\002\t\001\350\016\t\023\000\022\t\001\000\001\332\001\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\002\t\001\351\016\t\023\000\022\t\001\000\002\t\001\000\t\t\001\266\007\t\023\000\022\t\001\000\002\t\001\000\002\t\001\352\016\t$\000\001\250C\000\001\3156\000\001\315!\000\022\t\001\000\002\t\001\000\005\t\001[\013\t\023\000\022\t\001\000\001|\001\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\002\t\001\353\016\t\023\000\022\t\001\000\002\t\001\000\004\t\001\343\f\t\023\000\001\t\001\275\020\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\005\t\001z\013\t\023\000\022\t\001\000\002\t\001\000\013\t\001z\005\t\023\000\r\t\001[\004\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\b\t\001\354\b\t\023\000\022\t\001\000\002\t\001\000\f\t\001[\004\t\f\0", offset, result);
        return result;
    }

    private static int zzUnpackTrans(String packed, int offset, int result[])
    {
        int i = 0;
        int j = offset;
        for(int l = packed.length(); i < l;)
        {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            value--;
            do
                result[j++] = value;
            while(--count > 0);
        }

        return j;
    }

    private static int[] zzUnpackAttribute()
    {
        int result[] = new int[236];
        int offset = 0;
        offset = zzUnpackAttribute("\001\000\001\t\001\001\001\t\002\001\001\t\030\001\006\t\003\001\001\000\001\001\006\000\004\001\001\t\002\001\001\000*\001\001\000\001\t\003\000\001\001\001\t\t\000\001\001\003\000\001\001\001\000,\001\n\000\035\001\001\000\001\t\004\000\016\001\003\000\n\001", offset, result);
        return result;
    }

    private static int zzUnpackAttribute(String packed, int offset, int result[])
    {
        int i = 0;
        int j = offset;
        for(int l = packed.length(); i < l;)
        {
            int count = packed.charAt(i++);
            int value = packed.charAt(i++);
            do
                result[j++] = value;
            while(--count > 0);
        }

        return j;
    }

    public CLexer()
    {
        zzLexicalState = 0;
        zzBuffer = new char[16384];
        zzAtBOL = true;
    }

    public int yychar()
    {
        return yychar;
    }

    public CLexer(Reader in)
    {
        zzLexicalState = 0;
        zzBuffer = new char[16384];
        zzAtBOL = true;
        zzReader = in;
    }

    public CLexer(InputStream in)
    {
        this(((Reader) (new InputStreamReader(in))));
    }

    private static char[] zzUnpackCMap(String packed)
    {
        char map[] = new char[0x10000];
        int i = 0;
        int j = 0;
        while(i < 1782) 
        {
            int count = packed.charAt(i++);
            char value = packed.charAt(i++);
            do
                map[j++] = value;
            while(--count > 0);
        }
        return map;
    }

    private boolean zzRefill()
        throws IOException
    {
        if(zzStartRead > 0)
        {
            System.arraycopy(zzBuffer, zzStartRead, zzBuffer, 0, zzEndRead - zzStartRead);
            zzEndRead -= zzStartRead;
            zzCurrentPos -= zzStartRead;
            zzMarkedPos -= zzStartRead;
            zzStartRead = 0;
        }
        if(zzCurrentPos >= zzBuffer.length)
        {
            char newBuffer[] = new char[zzCurrentPos * 2];
            System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
            zzBuffer = newBuffer;
        }
        int numRead = zzReader.read(zzBuffer, zzEndRead, zzBuffer.length - zzEndRead);
        if(numRead > 0)
        {
            zzEndRead += numRead;
            return false;
        }
        if(numRead == 0)
        {
            int c = zzReader.read();
            if(c == -1)
            {
                return true;
            } else
            {
                zzBuffer[zzEndRead++] = (char)c;
                return false;
            }
        } else
        {
            return true;
        }
    }

    public final void yyclose()
        throws IOException
    {
        zzAtEOF = true;
        zzEndRead = zzStartRead;
        if(zzReader != null)
            zzReader.close();
    }

    public final void yyreset(Reader reader)
    {
        zzReader = reader;
        zzAtBOL = true;
        zzAtEOF = false;
        zzEOFDone = false;
        zzEndRead = zzStartRead = 0;
        zzCurrentPos = zzMarkedPos = 0;
        yyline = yychar = yycolumn = 0;
        zzLexicalState = 0;
    }

    public final int yystate()
    {
        return zzLexicalState;
    }

    public final void yybegin(int newState)
    {
        zzLexicalState = newState;
    }

    public final String yytext()
    {
        return new String(zzBuffer, zzStartRead, zzMarkedPos - zzStartRead);
    }

    public final char yycharat(int pos)
    {
        return zzBuffer[zzStartRead + pos];
    }

    public final int yylength()
    {
        return zzMarkedPos - zzStartRead;
    }

    private void zzScanError(int errorCode)
    {
        String message;
        try
        {
            message = ZZ_ERROR_MSG[errorCode];
        }
        catch(ArrayIndexOutOfBoundsException e)
        {
            message = ZZ_ERROR_MSG[0];
        }
        throw new Error(message);
    }

    public void yypushback(int number)
    {
        if(number > yylength())
            zzScanError(2);
        zzMarkedPos -= number;
    }

    public Token yylex()
        throws IOException
    {
        int zzEndReadL = zzEndRead;
        char zzBufferL[] = zzBuffer;
        char zzCMapL[] = ZZ_CMAP;
        int zzTransL[] = ZZ_TRANS;
        int zzRowMapL[] = ZZ_ROWMAP;
        int zzAttrL[] = ZZ_ATTRIBUTE;
        do
        {
            int zzMarkedPosL = zzMarkedPos;
            yychar += zzMarkedPosL - zzStartRead;
            int zzAction = -1;
            int zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
            zzState = ZZ_LEXSTATE[zzLexicalState];
            int zzInput;
            int zzAttributes;
label0:
            do
            {
                do
                {
                    if(zzCurrentPosL < zzEndReadL)
                    {
                        zzInput = zzBufferL[zzCurrentPosL++];
                    } else
                    {
                        if(zzAtEOF)
                        {
                            zzInput = -1;
                            break label0;
                        }
                        zzCurrentPos = zzCurrentPosL;
                        zzMarkedPos = zzMarkedPosL;
                        boolean eof = zzRefill();
                        zzCurrentPosL = zzCurrentPos;
                        zzMarkedPosL = zzMarkedPos;
                        zzBufferL = zzBuffer;
                        zzEndReadL = zzEndRead;
                        if(eof)
                        {
                            zzInput = -1;
                            break label0;
                        }
                        zzInput = zzBufferL[zzCurrentPosL++];
                    }
                    int zzNext = zzTransL[zzRowMapL[zzState] + zzCMapL[zzInput]];
                    if(zzNext == -1)
                        break label0;
                    zzState = zzNext;
                    zzAttributes = zzAttrL[zzState];
                } while((zzAttributes & 1) != 1);
                zzAction = zzState;
                zzMarkedPosL = zzCurrentPosL;
            } while((zzAttributes & 8) != 8);
            zzMarkedPos = zzMarkedPosL;
            switch(zzAction >= 0 ? ZZ_ACTION[zzAction] : zzAction)
            {
            case 12: // '\f'
                return token(TokenType.KEYWORD);

            case 7: // '\007'
                return token(TokenType.OPERATOR, 3);

            case 9: // '\t'
                return token(TokenType.OPERATOR, 2);

            case 3: // '\003'
                return token(TokenType.OPERATOR);

            case 6: // '\006'
                return token(TokenType.OPERATOR, -1);

            case 14: // '\016'
                return token(TokenType.KEYWORD2);

            case 2: // '\002'
                return token(TokenType.IDENTIFIER);

            case 5: // '\005'
                return token(TokenType.OPERATOR, 1);

            case 13: // '\r'
                return token(TokenType.STRING);

            case 11: // '\013'
                return token(TokenType.COMMENT);

            case 10: // '\n'
                return token(TokenType.OPERATOR, -2);

            case 8: // '\b'
                return token(TokenType.OPERATOR, -3);

            case 15: // '\017'
                return token(TokenType.TYPE);

            case 4: // '\004'
                return token(TokenType.NUMBER);

            default:
                if(zzInput == -1 && zzStartRead == zzCurrentPos)
                {
                    zzAtEOF = true;
                    return null;
                }
                zzScanError(1);
                break;

            case 1: // '\001'
            case 16: // '\020'
            case 17: // '\021'
            case 18: // '\022'
            case 19: // '\023'
            case 20: // '\024'
            case 21: // '\025'
            case 22: // '\026'
            case 23: // '\027'
            case 24: // '\030'
            case 25: // '\031'
            case 26: // '\032'
            case 27: // '\033'
            case 28: // '\034'
            case 29: // '\035'
            case 30: // '\036'
                break;
            }
        } while(true);
    }

    public static final int YYEOF = -1;
    private static final int ZZ_BUFFERSIZE = 16384;
    public static final int YYINITIAL = 0;
    private static final int ZZ_LEXSTATE[] = {
        0, 0
    };
    private static final String ZZ_CMAP_PACKED = "\t\t\001\003\001\002\001\000\001\003\001\001\016\t\004\000\001\003\0017\001.\001\006\001\007\0017\0017\0010\0011\0012\001\005\001\034\0017\001\034\001\031\001\004\001\f\007\021\002\n\0017\0017\0019\0017\0018\0017\001\000\003\020\001\027\001\033\001\027\005\013\001\025\b\013\001\023\002\013\001\016\002\013\0015\001/\0016\0017\001\b\001\000\001\037\001\035\001\017\001\030\001\032\001\026\001'\001#\001&\001\007\001 \001\024\001(\001%\001$\001,\001\007\001\036\001!\001\"\001\022\001-\001+\001\r\001)\001*\0013\0017\0014\0017!\t\002\000\004\007\004\000\001\007\002\000\001\t\007\000\001\007\004\000\001\007\005\000\027\007\001\000\037\007\001\000\u013F\007\031\000r\007\004\000\f\007\016\000\005\007\t\000\001\007\021\000X\t\005\000\023\t\n\000\001\007\013\000\001\007\001\000\003\007\001\000\001\007\001\000\024\007\001\000,\007\001\000&\007\001\000\005\007\004\000\202\007\001\000\004\t\003\000E\007\001\000&\007\002\000\002\007\006\000\020\007!\000&\007\002\000\001\007\007\000'\007\t\000\021\t\001\000\027\t\001\000\003\t\001\000\001\t\001\000\002\t\001\000\001\t\013\000\033\007\005\000\003\007\r\000\004\t\f\000\006\t\013\000\032\007\005\000\013\007\016\t\007\000\n\t\004\000\002\007\001\tc\007\001\000\001\007\b\t\001\000\006\t\002\007\002\t\001\000\004\t\002\007\n\t\003\007\002\000\001\007\017\000\001\t\001\007\001\t\036\007\033\t\002\000\003\0070\000&\007\013\t\001\007\u014F\000\003\t6\007\002\000\001\t\001\007\020\t\002\000\001\007\004\t\003\000\n\007\002\t\002\000\n\t\021\000\003\t\001\000\b\007\002\000\002\007\002\000\026\007\001\000\007\007\001\000\001\007\003\000\004\007\002\000\001\t\001\007\007\t\002\000\002\t\002\000\003\t\t\000\001\t\004\000\002\007\001\000\003\007\002\t\002\000\n\t\004\007\r\000\003\t\001\000\006\007\004\000\002\007\002\000\026\007\001\000\007\007\001\000\002\007\001\000\002\007\001\000\002\007\002\000\001\t\001\000\005\t\004\000\002\t\002\000\003\t\013\000\004\007\001\000\001\007\007\000\f\t\003\007\f\000\003\t\001\000\t\007\001\000\003\007\001\000\026\007\001\000\007\007\001\000\002\007\001\000\005\007\002\000\001\t\001\007\b\t\001\000\003\t\001\000\003\t\002\000\001\007\017\000\002\007\002\t\002\000\n\t\001\000\001\007\017\000\003\t\001\000\b\007\002\000\002\007\002\000\026\007\001\000\007\007\001\000\002\007\001\000\005\007\002\000\001\t\001\007\006\t\003\000\002\t\002\000\003\t\b\000\002\t\004\000\002\007\001\000\003\007\004\000\n\t\001\000\001\007\020\000\001\t\001\007\001\000\006\007\003\000\003\007\001\000\004\007\003\000\002\007\001\000\001\007\001\000\002\007\003\000\002\007\003\000\003\007\003\000\b\007\001\000\003\007\004\000\005\t\003\000\003\t\001\000\004\t\t\000\001\t\017\000\t\t\t\000\001\007\007\000\003\t\001\000\b\007\001\000\003\007\001\000\027\007\001\000\n\007\001\000\005\007\004\000\007\t\001\000\003\t\001\000\004\t\007\000\002\t\t\000\002\007\004\000\n\t\022\000\002\t\001\000\b\007\001\000\003\007\001\000\027\007\001\000\n\007\001\000\005\007\002\000\001\t\001\007\007\t\001\000\003\t\001\000\004\t\007\000\002\t\007\000\001\007\001\000\002\007\004\000\n\t\022\000\002\t\001\000\b\007\001\000\003\007\001\000\027\007\001\000\020\007\004\000\006\t\002\000\003\t\001\000\004\t\t\000\001\t\b\000\002\007\004\000\n\t\022\000\002\t\001\000\022\007\003\000\030\007\001\000\t\007\001\000\001\007\002\000\007\007\003\000\001\t\004\000\006\t\001\000\001\t\001\000\b\t\022\000\002\t\r\0000\007\001\t\002\007\007\t\004\000\b\007\b\t\001\000\n\t'\000\002\007\001\000\001\007\002\000\002\007\001\000\001\007\002\000\001\007\006\000\004\007\001\000\007\007\001\000\003\007\001\000\001\007\001\000\001\007\002\000\002\007\001\000\004\007\001\t\002\007\006\t\001\000\002\t\001\007\002\000\005\007\001\000\001\007\001\000\006\t\002\000\n\t\002\000\002\007\"\000\001\007\027\000\002\t\006\000\n\t\013\000\001\t\001\000\001\t\001\000\001\t\004\000\002\t\b\007\001\000\"\007\006\000\024\t\001\000\002\t\004\007\004\000\b\t\001\000$\t\t\000\001\t9\000\"\007\001\000\005\007\001\000\002\007\001\000\007\t\003\000\004\t\006\000\n\t\006\000\006\007\004\tF\000&\007\n\000)\007\007\000Z\007\005\000D\007\005\000R\007\006\000\007\007\001\000?\007\001\000\001\007\001\000\004\007\002\000\007\007\001\000\001\007\001\000\004\007\002\000'\007\001\000\001\007\001\000\004\007\002\000\037\007\001\000\001\007\001\000\004\007\002\000\007\007\001\000\001\007\001\000\004\007\002\000\007\007\001\000\007\007\001\000\027\007\001\000\037\007\001\000\001\007\001\000\004\007\002\000\007\007\001\000'\007\001\000\023\007\016\000\t\t.\000U\007\f\000\u026C\007\002\000\b\007\n\000\032\007\005\000K\007\003\000\003\007\017\000\r\007\001\000\004\007\003\t\013\000\022\007\003\t\013\000\022\007\002\t\f\000\r\007\001\000\003\007\001\000\002\t\f\0004\007 \t\003\000\001\007\003\000\002\007\001\t\002\000\n\t!\000\003\t\002\000\n\t\006\000X\007\b\000)\007\001\tV\000\035\007\003\000\f\t\004\000\f\t\n\000\n\t\036\007\002\000\005\007\u038B\000l\007\224\000\234\007\004\000Z\007\006\000\026\007\002\000\006\007\002\000&\007\002\000\006\007\002\000\b\007\001\000\001\007\001\000\001\007\001\000\001\007\001\000\037\007\002\0005\007\001\000\007\007\001\000\001\007\003\000\003\007\001\000\007\007\003\000\004\007\002\000\006\007\004\000\r\007\005\000\003\007\001\000\007\007\017\000\004\t\032\000\005\t\020\000\002\007\023\000\001\007\013\000\004\t\006\000\006\t\001\000\001\007\r\000\001\007 \000\022\007\036\000\r\t\004\000\001\t\003\000\006\t\027\000\001\007\004\000\001\007\002\000\n\007\001\000\001\007\003\000\005\007\006\000\001\007\001\000\001\007\001\000\001\007\001\000\004\007\001\000\003\007\001\000\007\007\003\000\003\007\005\000\005\007\026\000$\007\u0E81\000\003\007\031\000\t\007\006\t\001\000\005\007\002\000\005\007\004\000V\007\002\000\002\t\002\000\003\007\001\000_\007\005\000(\007\004\000^\007\021\000\030\0078\000\020\007\u0200\000\u19B6\007J\000\u51A6\007Z\000\u048D\007\u0773\000\u2BA4\007\u215C\000\u012E\007\002\000;\007\225\000\007\007\f\000\005\007\005\000\001\007\001\t\n\007\001\000\r\007\001\000\005\007\001\000\001\007\001\000\002\007\001\000\002\007\001\000l\007!\000\u016B\007\022\000@\007\002\0006\007(\000\r\007\003\000\020\t\020\000\004\t\017\000\002\007\030\000\003\007\031\000\001\007\006\000\005\007\001\000\207\007\002\000\001\t\004\000\001\007\013\000\n\t\007\000\032\007\004\000\001\007\001\000\032\007\n\000Z\007\003\000\006\007\002\000\006\007\002\000\006\007\002\000\003\007\003\000\002\007\003\000\002\007\022\000\003\t\004\0";
    private static final char ZZ_CMAP[] = zzUnpackCMap("\t\t\001\003\001\002\001\000\001\003\001\001\016\t\004\000\001\003\0017\001.\001\006\001\007\0017\0017\0010\0011\0012\001\005\001\034\0017\001\034\001\031\001\004\001\f\007\021\002\n\0017\0017\0019\0017\0018\0017\001\000\003\020\001\027\001\033\001\027\005\013\001\025\b\013\001\023\002\013\001\016\002\013\0015\001/\0016\0017\001\b\001\000\001\037\001\035\001\017\001\030\001\032\001\026\001'\001#\001&\001\007\001 \001\024\001(\001%\001$\001,\001\007\001\036\001!\001\"\001\022\001-\001+\001\r\001)\001*\0013\0017\0014\0017!\t\002\000\004\007\004\000\001\007\002\000\001\t\007\000\001\007\004\000\001\007\005\000\027\007\001\000\037\007\001\000\u013F\007\031\000r\007\004\000\f\007\016\000\005\007\t\000\001\007\021\000X\t\005\000\023\t\n\000\001\007\013\000\001\007\001\000\003\007\001\000\001\007\001\000\024\007\001\000,\007\001\000&\007\001\000\005\007\004\000\202\007\001\000\004\t\003\000E\007\001\000&\007\002\000\002\007\006\000\020\007!\000&\007\002\000\001\007\007\000'\007\t\000\021\t\001\000\027\t\001\000\003\t\001\000\001\t\001\000\002\t\001\000\001\t\013\000\033\007\005\000\003\007\r\000\004\t\f\000\006\t\013\000\032\007\005\000\013\007\016\t\007\000\n\t\004\000\002\007\001\tc\007\001\000\001\007\b\t\001\000\006\t\002\007\002\t\001\000\004\t\002\007\n\t\003\007\002\000\001\007\017\000\001\t\001\007\001\t\036\007\033\t\002\000\003\0070\000&\007\013\t\001\007\u014F\000\003\t6\007\002\000\001\t\001\007\020\t\002\000\001\007\004\t\003\000\n\007\002\t\002\000\n\t\021\000\003\t\001\000\b\007\002\000\002\007\002\000\026\007\001\000\007\007\001\000\001\007\003\000\004\007\002\000\001\t\001\007\007\t\002\000\002\t\002\000\003\t\t\000\001\t\004\000\002\007\001\000\003\007\002\t\002\000\n\t\004\007\r\000\003\t\001\000\006\007\004\000\002\007\002\000\026\007\001\000\007\007\001\000\002\007\001\000\002\007\001\000\002\007\002\000\001\t\001\000\005\t\004\000\002\t\002\000\003\t\013\000\004\007\001\000\001\007\007\000\f\t\003\007\f\000\003\t\001\000\t\007\001\000\003\007\001\000\026\007\001\000\007\007\001\000\002\007\001\000\005\007\002\000\001\t\001\007\b\t\001\000\003\t\001\000\003\t\002\000\001\007\017\000\002\007\002\t\002\000\n\t\001\000\001\007\017\000\003\t\001\000\b\007\002\000\002\007\002\000\026\007\001\000\007\007\001\000\002\007\001\000\005\007\002\000\001\t\001\007\006\t\003\000\002\t\002\000\003\t\b\000\002\t\004\000\002\007\001\000\003\007\004\000\n\t\001\000\001\007\020\000\001\t\001\007\001\000\006\007\003\000\003\007\001\000\004\007\003\000\002\007\001\000\001\007\001\000\002\007\003\000\002\007\003\000\003\007\003\000\b\007\001\000\003\007\004\000\005\t\003\000\003\t\001\000\004\t\t\000\001\t\017\000\t\t\t\000\001\007\007\000\003\t\001\000\b\007\001\000\003\007\001\000\027\007\001\000\n\007\001\000\005\007\004\000\007\t\001\000\003\t\001\000\004\t\007\000\002\t\t\000\002\007\004\000\n\t\022\000\002\t\001\000\b\007\001\000\003\007\001\000\027\007\001\000\n\007\001\000\005\007\002\000\001\t\001\007\007\t\001\000\003\t\001\000\004\t\007\000\002\t\007\000\001\007\001\000\002\007\004\000\n\t\022\000\002\t\001\000\b\007\001\000\003\007\001\000\027\007\001\000\020\007\004\000\006\t\002\000\003\t\001\000\004\t\t\000\001\t\b\000\002\007\004\000\n\t\022\000\002\t\001\000\022\007\003\000\030\007\001\000\t\007\001\000\001\007\002\000\007\007\003\000\001\t\004\000\006\t\001\000\001\t\001\000\b\t\022\000\002\t\r\0000\007\001\t\002\007\007\t\004\000\b\007\b\t\001\000\n\t'\000\002\007\001\000\001\007\002\000\002\007\001\000\001\007\002\000\001\007\006\000\004\007\001\000\007\007\001\000\003\007\001\000\001\007\001\000\001\007\002\000\002\007\001\000\004\007\001\t\002\007\006\t\001\000\002\t\001\007\002\000\005\007\001\000\001\007\001\000\006\t\002\000\n\t\002\000\002\007\"\000\001\007\027\000\002\t\006\000\n\t\013\000\001\t\001\000\001\t\001\000\001\t\004\000\002\t\b\007\001\000\"\007\006\000\024\t\001\000\002\t\004\007\004\000\b\t\001\000$\t\t\000\001\t9\000\"\007\001\000\005\007\001\000\002\007\001\000\007\t\003\000\004\t\006\000\n\t\006\000\006\007\004\tF\000&\007\n\000)\007\007\000Z\007\005\000D\007\005\000R\007\006\000\007\007\001\000?\007\001\000\001\007\001\000\004\007\002\000\007\007\001\000\001\007\001\000\004\007\002\000'\007\001\000\001\007\001\000\004\007\002\000\037\007\001\000\001\007\001\000\004\007\002\000\007\007\001\000\001\007\001\000\004\007\002\000\007\007\001\000\007\007\001\000\027\007\001\000\037\007\001\000\001\007\001\000\004\007\002\000\007\007\001\000'\007\001\000\023\007\016\000\t\t.\000U\007\f\000\u026C\007\002\000\b\007\n\000\032\007\005\000K\007\003\000\003\007\017\000\r\007\001\000\004\007\003\t\013\000\022\007\003\t\013\000\022\007\002\t\f\000\r\007\001\000\003\007\001\000\002\t\f\0004\007 \t\003\000\001\007\003\000\002\007\001\t\002\000\n\t!\000\003\t\002\000\n\t\006\000X\007\b\000)\007\001\tV\000\035\007\003\000\f\t\004\000\f\t\n\000\n\t\036\007\002\000\005\007\u038B\000l\007\224\000\234\007\004\000Z\007\006\000\026\007\002\000\006\007\002\000&\007\002\000\006\007\002\000\b\007\001\000\001\007\001\000\001\007\001\000\001\007\001\000\037\007\002\0005\007\001\000\007\007\001\000\001\007\003\000\003\007\001\000\007\007\003\000\004\007\002\000\006\007\004\000\r\007\005\000\003\007\001\000\007\007\017\000\004\t\032\000\005\t\020\000\002\007\023\000\001\007\013\000\004\t\006\000\006\t\001\000\001\007\r\000\001\007 \000\022\007\036\000\r\t\004\000\001\t\003\000\006\t\027\000\001\007\004\000\001\007\002\000\n\007\001\000\001\007\003\000\005\007\006\000\001\007\001\000\001\007\001\000\001\007\001\000\004\007\001\000\003\007\001\000\007\007\003\000\003\007\005\000\005\007\026\000$\007\u0E81\000\003\007\031\000\t\007\006\t\001\000\005\007\002\000\005\007\004\000V\007\002\000\002\t\002\000\003\007\001\000_\007\005\000(\007\004\000^\007\021\000\030\0078\000\020\007\u0200\000\u19B6\007J\000\u51A6\007Z\000\u048D\007\u0773\000\u2BA4\007\u215C\000\u012E\007\002\000;\007\225\000\007\007\f\000\005\007\005\000\001\007\001\t\n\007\001\000\r\007\001\000\005\007\001\000\001\007\001\000\002\007\001\000\002\007\001\000l\007!\000\u016B\007\022\000@\007\002\0006\007(\000\r\007\003\000\020\t\020\000\004\t\017\000\002\007\030\000\003\007\031\000\001\007\006\000\005\007\001\000\207\007\002\000\001\t\004\000\001\007\013\000\n\t\007\000\032\007\004\000\001\007\001\000\032\007\n\000Z\007\003\000\006\007\002\000\006\007\002\000\006\007\002\000\003\007\003\000\002\007\003\000\002\007\022\000\003\t\004\0");
    private static final int ZZ_ACTION[] = zzUnpackAction();
    private static final String ZZ_ACTION_PACKED_0 = "\001\000\001\001\003\002\002\003\003\002\002\004\005\002\001\003\013\002\002\001\001\005\001\006\001\007\001\b\001\t\001\n\002\003\001\013\001\000\001\002\006\000\007\004\001\000\001\002\004\004\013\002\001\f\021\002\001\f\007\002\001\000\001\r\003\000\002\013\t\000\001\016\003\000\001\004\001\000\001\004#\002\001\017\007\002\n\000\024\002\001\004\b\002\001\000\001\016\004\000\016\002\003\000\004\002\001\017\005\002";
    private static final int ZZ_ROWMAP[] = zzUnpackRowMap();
    private static final String ZZ_ROWMAP_PACKED_0 = "\000\000\000:\000t\000:\000\256\000\350\000:\000\u0122\000\u015C\000\u0196\000\u01D0\000\u020A\000\u0244\000\u027E\000\u02B8\000\u02F2\000\u032C\000\u0366\000\u03A0\000\u03DA\000\u0414\000\u044E\000\u0488\000\u04C2\000\u04FC\000\u0536\000\u0570\000\u05AA\000\u05E4\000\u061E\000\u0658\000:\000:\000:\000:\000:\000:\000\u0692\000\u06CC\000\u0706\000\u0740\000\u077A\000\u07B4\000\u07EE\000\u0828\000\u0862\000\u089C\000\u08D6\000\u0910\000\u094A\000\u0984\000\u09BE\000:\000\u077A\000\u09F8\000\u0A32\000\u0A6C\000\u0AA6\000\u0AE0\000\u0B1A\000\u0B54\000\u0B8E\000\u0BC8\000\u0C02\000\u0C3C\000\u0C76\000\u0CB0\000\u0CEA\000\u0D24\000\u0D5E\000\u0D98\000\u0DD2\000\u0E0C\000\u0E46\000\u0E80\000\u0EBA\000\u0EF4\000\u0F2E\000\u0F68\000\u0FA2\000\u0FDC\000\u1016\000\u1050\000\u108A\000\u10C4\000\u10FE\000\u1138\000\u1172\000\u11AC\000\u11E6\000\u015C\000\u1220\000\u125A\000\u1294\000\u12CE\000\u1308\000\u1342\000\u137C\000\u061E\000:\000\u13B6\000\u0658\000\u13F0\000\u142A\000:\000\u1464\000\u149E\000\u14D8\000\u1512\000\u154C\000\u1586\000\u15C0\000\u15FA\000\u1634\000\u166E\000\u16A8\000\u16E2\000\u171C\000\u1756\000\u1790\000\u17CA\000\u1804\000\u183E\000\u1878\000\u18B2\000\u18EC\000\u1926\000\u1960\000\u199A\000\u19D4\000\u1A0E\000\u1A48\000\u1A82\000\u1ABC\000\u1AF6\000\u1B30\000\u1B6A\000\u1BA4\000\u1BDE\000\u1C18\000\u1C52\000\u1C8C\000\u1CC6\000\u1D00\000\u1D3A\000\u1D74\000\u1DAE\000\u1DE8\000\u1E22\000\u1E5C\000\u1E96\000\u1ED0\000\u1F0A\000\u1F44\000\u1F7E\000\u1FB8\000\u015C\000\u1FF2\000\u202C\000\u2066\000\u20A0\000\u20DA\000\u2114\000\u214E\000\u2188\000\u21C2\000\u21FC\000\u2236\000\u2270\000\u22AA\000\u22E4\000\u231E\000\u2358\000\u2392\000\u23CC\000\u2406\000\u2440\000\u247A\000\u24B4\000\u24EE\000\u2528\000\u2562\000\u259C\000\u25D6\000\u2610\000\u264A\000\u2684\000\u26BE\000\u26F8\000\u2732\000\u276C\000\u27A6\000\u27E0\000\u281A\000\u015C\000\u2854\000\u288E\000\u28C8\000\u2902\000\u293C\000\u2976\000\u29B0\000\u29EA\000\u2A24\000:\000\u2A5E\000\u2A98\000\u2AD2\000\u2B0C\000\u2B46\000\u2B80\000\u2BBA\000\u2BF4\000\u2C2E\000\u2C68\000\u2CA2\000\u2CDC\000\u2D16\000\u2D50\000\u2D8A\000\u2DC4\000\u2DFE\000\u2E38\000\u2E72\000\u2EAC\000\u2EE6\000\u2F20\000\u2F5A\000\u2F94\000\u2FCE\000\u3008\000\u3042\000\u307C\000\u30B6\000\u30F0\000\u312A";
    private static final int ZZ_TRANS[] = zzUnpackTrans();
    private static final String ZZ_TRANS_PACKED_0 = "\001\002\001\003\001\004\001\005\001\006\001\007\001\b\001\t\001\n\001\002\001\013\001\n\001\f\001\t\001\n\001\r\001\n\001\013\001\016\001\n\001\017\001\n\001\020\001\n\001\021\001\022\001\023\001\n\001\007\001\024\001\025\002\t\001\026\001\027\002\t\001\030\001\031\001\032\001\033\002\t\001\034\001\t\001\035\001\036\001\002\001\037\001 \001!\001\"\001#\001$\001%\001\007\001&\001'<\000\001\004:\000\001\005:\000\001(\001):\000\001*\001\000\001*\001\000\003*\001\000\001*\001\000\002*\001+\001*\001,\001*\001\000\001*\001-\001\000\001.\001*\n\000\001/\005\000\0010\024\000\022\t\001\000\002\t\001\000\021\t\022\000\001*\001\t\001\n\001\t\003\n\001\t\001\n\001\t\002\n\001\t\001\n\001\t\001\n\001\t\001\n\001\t\001\000\001\t\001\n\001\000\021\t\022\000\001*\001\000\001*\001\000\001\013\001*\001\013\001\000\001*\001\000\001*\001\013\0011\0012\0013\0014\0015\0016\0015\0017\0018\0019$\000\001*\001\000\001*\001\000\001:\001*\001;\001<\001=\001\000\001*\001;\0011\0012\0013\0014\0015\0016\0015\0017\0018\0019%\000\022\t\001\000\002\t\001\000\002\t\001>\003\t\001?\001@\t\t\023\000\013\t\001A\006\t\001\000\002\t\001\000\004\t\001B\003\t\001C\b\t\023\000\022\t\001\000\002\t\001\000\007\t\001D\t\t\023\000\r\t\001E\004\t\001\000\002\t\001\000\002\t\001F\004\t\001G\t\t\023\000\022\t\001\000\001H\001\t\001\000\007\t\001I\t\t\026\000\0017\001\000\0017\004\000\0017/\000\006\t\001J\006\t\001K\004\t\001\000\002\t\001\000\b\t\001L\b\t\023\000\022\t\001\000\002\t\001\000\001\t\001M\005\t\001N\t\t\023\000\022\t\001\000\001O\001\t\001\000\021\t\023\000\022\t\001\000\001P\001\t\001\000\002\t\001Q\002\t\001R\001S\002\t\001T\004\t\001U\002\t\023\000\022\t\001\000\001V\001\t\001\000\001\t\001W\004\t\001X\005\t\001Y\004\t\023\000\022\t\001\000\002\t\001\000\007\t\001Z\t\t\023\000\017\t\001[\002\t\001\000\002\t\001\000\b\t\001\\\b\t\023\000\022\t\001\000\002\t\001\000\007\t\001]\t\t\023\000\013\t\001^\006\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\006\t\001_\n\t\023\000\022\t\001\000\002\t\001\000\002\t\001`\004\t\001a\001\t\001b\007\t\f\000\002c\001d+c\001d\001e\nc\002f\001d,f\001g\001d\tf8\000\001\007:\000\001\007\001(\001h\001i7(\005j\001k4j\006\000\001*\001\000\001*\001\000\003*\001\000\001*\001\000\002*\001\000\001*\001\000\001*\001\000\001*\003\000\001*?\000\001l\003\000\001m:\000\001n-\000\001o3\000\001p\t\000\001q\006\000\001r*\000\001s\016\000\001t\002\000\001u/\000\001v-\000\0025\0023*\000\001*\001\000\001*\001\000\003*\001\000\001*\001\000\002*\0015\0016\0013\0014\001\000\001*\003\000\001*0\000\0025,\000\001*\001\000\001*\001\000\003*\001\000\001*\001\000\002*\0015\0016\001\000\001*\001\000\001*\003\000\001*(\000\0017\001\000\0017\004\000\0017\004\000\0035\001\000\0028(\000\001w\001\000\001w\004\000\001w\n\000\001x#\000\001*\001\000\001*\001\000\001y\001*\001y\001\000\001*\001\000\001*\001y\001\000\001*\001\000\001*\001\000\001*\003\000\001*\001xt\001\000\002\t\001\000\004\t\001z\001{\013\t\023\000\022\t\001\000\002\t\001\000\002\t\001|\016\t\023\000\022\t\001\000\002\t\001\000\b\t\001}\b\t\023\000\022\t\001\000\002\t\001\000\t\t\001~\007\t\023\000\022\t\001\000\002\t\001\000\t\t\001\177\007\t\023\000\022\t\001\000\002\t\001\000\004\t\001\200\004\t\001\201\007\t\023\000\022\t\001\000\002\t\001\000\b\t\001\202\b\t\023\000\022\t\001\000\002\t\001\000\007\t\001\203\t\t\023\000\r\t\001\204\004\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\001\t\001[\017\t\023\000\017\t\001\205\002\t\001\000\002\t\001\000\021\t\023\000\013\t\001\206\006\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\005\t\001\207\013\t\023\000\022\t\001\000\002\t\001\000\004\t\001z\f\t\023\000\013\t\001\210\006\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\001\211\001\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\007\t\001\212\t\t\023\000\022\t\001\000\002\t\001\000\005\t\001\213\004\t\001\214\006\t\023\000\r\t\001\215\004\t\001\000\002\t\001\000\002\t\001\216\016\t\023\000\017\t\001\217\002\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\001\t\001\220\001\221\016\t\023\000\022\t\001\000\002\t\001\000\007\t\001\222\t\t\023\000\022\t\001\000\002\t\001\000\n\t\001\223\002\t\001\224\003\t\023\000\022\t\001\000\002\t\001\000\t\t\001\225\007\t\023\000\022\t\001\000\002\t\001\000\013\t\001\226\005\t\023\000\013\t\001\227\006\t\001\000\002\t\001\000\f\t\001[\004\t\023\000\022\t\001\000\002\t\001\000\001\t\001\230\007\t\001\231\007\t\023\000\022\t\001\000\002\t\001\000\017\t\001\232\001\t\023\000\022\t\001\000\002\t\001\000\t\t\001\233\007\t\023\000\r\t\001\234\004\t\001\000\002\t\001\000\005\t\001\235\013\t\023\000\022\t\001\000\002\t\001\000\005\t\001\236\013\t\023\000\022\t\001\000\002\t\001\000\005\t\001\237\013\t\023\000\022\t\001\000\002\t\001\000\t\t\001\240\007\t\023\000\r\t\001\241\004\t\001\000\002\t\001\000\021\t\023\000\r\t\001\242\004\t\001\000\002\t\001\000\t\t\001\243\007\t\023\000\022\t\001\000\002\t\001\000\001\t\001\244\017\t\f\000\002c\001d7c\002f\001d7f\002\000\001i7\000\005j\001\2454j\004\000\001i\001kZ\000\001\246+\000\001\247F\000\001\250*\000\001,D\000\001\250\004\000\001\2511\000\001\2523\000\001\2539\000\001\247\f\000\001m#\000\001\254V\000\001\255,\000\001\256$\000\001w\001\000\001w\004\000\001w\004\000\0035+\000\001w\001\000\001w\004\000\001w.\000\001*\001\000\001*\001\000\001y\001*\001y\001\000\001*\001\000\001*\001y\001\000\001*\001\000\001*\0015\0016\0015\002\000\001*%\000\022\t\001\000\001[\001\t\001\000\021\t\023\000\b\t\001\257\t\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\001\t\001\235\017\t\023\000\022\t\001\000\002\t\001\000\004\t\001\260\001\261\013\t\023\000\021\t\001[\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\b\t\001\262\b\t\023\000\022\t\001\000\002\t\001\000\t\t\001\263\007\t\023\000\022\t\001\000\002\t\001\000\007\t\001\264\t\t\023\000\022\t\001\000\002\t\001\000\n\t\001\235\006\t\023\000\022\t\001\000\002\t\001\000\002\t\001\260\016\t\023\000\022\t\001\000\002\t\001\000\004\t\001\227\f\t\023\000\022\t\001\000\002\t\001\000\002\t\001\265\016\t\023\000\022\t\001\000\002\t\001\000\001\266\020\t\023\000\022\t\001\000\001\267\001\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\013\t\001[\005\t\023\000\022\t\001\000\002\t\001\000\002\t\001\270\016\t\023\000\r\t\001\235\004\t\001\000\002\t\001\000\021\t\023\000\013\t\001\271\006\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\t\t\001\272\007\t\023\000\022\t\001\000\001\273\001\t\001\000\021\t\023\000\r\t\001\274\004\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\001\275\001\t\001\000\021\t\023\000\013\t\001\276\006\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\005\t\001\277\013\t\023\000\022\t\001\000\002\t\001\000\001\t\001\260\017\t\023\000\022\t\001\000\002\t\001\000\b\t\001\300\b\t\023\000\022\t\001\000\001\301\001\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\005\t\001{\013\t\023\000\022\t\001\000\002\t\001\000\017\t\001\302\001\t\023\000\022\t\001\000\001\303\001\t\001\000\021\t\023\000\022\t\001\000\001\304\001\t\001\000\007\t\001\305\t\t\023\000\022\t\001\000\002\t\001\000\004\t\001[\f\t\023\000\022\t\001\000\001\306\001\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\b\t\001\307\b\t\023\000\022\t\001\000\002\t\001\000\t\t\001\310\007\t\023\000\022\t\001\000\002\t\001\000\007\t\001[\t\t\023\000\022\t\001\000\002\t\001\000\002\t\001\311\016\t\023\000\r\t\001z\004\t\001\000\002\t\001\000\021\t\023\000\013\t\001z\006\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\002\t\001\312\016\t\023\000\021\t\001\235\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\005\t\001\313\013\t\f\000\004j\001i\001\2454j%\000\001\314.\000\001\2519\000\001\3155\000\001\315G\000\001\316;\000\001\251'\000\001\317I\000\001\320<\000\001\321\031\000\022\t\001\000\002\t\001\000\006\t\001[\n\t\023\000\022\t\001\000\002\t\001\000\005\t\001\235\013\t\023\000\022\t\001\000\002\t\001\000\t\t\001\322\007\t\023\000\022\t\001\000\002\t\001\000\n\t\001[\006\t\023\000\022\t\001\000\002\t\001\000\n\t\001\223\006\t\023\000\022\t\001\000\002\t\001\000\b\t\001\235\b\t\023\000\013\t\001\323\006\t\001\000\002\t\001\000\021\t\023\000\r\t\001\324\004\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\001\t\001\264\017\t\023\000\022\t\001\000\002\t\001\000\003\t\001[\r\t\023\000\022\t\001\000\002\t\001\000\001\t\001\325\017\t\023\000\022\t\001\000\002\t\001\000\004\t\001\326\f\t\023\000\b\t\001\327\t\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\001~\001\t\001\000\021\t\023\000\b\t\001\330\t\t\001\000\002\t\001\000\021\t\023\000\b\t\001\260\t\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\t\t\001\331\007\t\023\000\022\t\001\000\001\243\001\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\007\t\001\332\t\t\023\000\r\t\001\333\004\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\002\t\001~\016\t\023\000\022\t\001\000\002\t\001\000\016\t\001[\002\t\023\000\021\t\001\334\001\000\002\t\001\000\b\t\001\335\001~\007\t\023\000\r\t\001\234\004\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\b\t\001z\b\t\023\000\022\t\001\000\002\t\001\000\001\240\020\t\023\000\022\t\001\000\002\t\001\000\005\t\001\336\013\t\023\000\013\t\001\337\006\t\001\000\002\t\001\000\021\t3\000\001\3150\000\001\315-\000\001\340E\000\001\341C\000\001\342\030\000\022\t\001\000\002\t\001\000\b\t\001\241\b\t\023\000\r\t\001\343\004\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\001\235\001\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\b\t\001[\b\t\023\000\022\t\001\000\002\t\001\000\005\t\001\344\013\t\023\000\022\t\001\000\002\t\001\000\005\t\001\345\013\t\023\000\022\t\001\000\002\t\001\000\002\t\001\346\016\t\023\000\b\t\001\347\t\t\001\000\002\t\001\000\021\t\023\000\017\t\001[\002\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\002\t\001\350\016\t\023\000\022\t\001\000\001\332\001\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\002\t\001\351\016\t\023\000\022\t\001\000\002\t\001\000\t\t\001\266\007\t\023\000\022\t\001\000\002\t\001\000\002\t\001\352\016\t$\000\001\250C\000\001\3156\000\001\315!\000\022\t\001\000\002\t\001\000\005\t\001[\013\t\023\000\022\t\001\000\001|\001\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\002\t\001\353\016\t\023\000\022\t\001\000\002\t\001\000\004\t\001\343\f\t\023\000\001\t\001\275\020\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\005\t\001z\013\t\023\000\022\t\001\000\002\t\001\000\013\t\001z\005\t\023\000\r\t\001[\004\t\001\000\002\t\001\000\021\t\023\000\022\t\001\000\002\t\001\000\b\t\001\354\b\t\023\000\022\t\001\000\002\t\001\000\f\t\001[\004\t\f\0";
    private static final int ZZ_UNKNOWN_ERROR = 0;
    private static final int ZZ_NO_MATCH = 1;
    private static final int ZZ_PUSHBACK_2BIG = 2;
    private static final String ZZ_ERROR_MSG[] = {
        "Unkown internal scanner error", "Error: could not match input", "Error: pushback value was too large"
    };
    private static final int ZZ_ATTRIBUTE[] = zzUnpackAttribute();
    private static final String ZZ_ATTRIBUTE_PACKED_0 = "\001\000\001\t\001\001\001\t\002\001\001\t\030\001\006\t\003\001\001\000\001\001\006\000\004\001\001\t\002\001\001\000*\001\001\000\001\t\003\000\001\001\001\t\t\000\001\001\003\000\001\001\001\000,\001\n\000\035\001\001\000\001\t\004\000\016\001\003\000\n\001";
    private Reader zzReader;
    private int zzState;
    private int zzLexicalState;
    private char zzBuffer[];
    private int zzMarkedPos;
    private int zzCurrentPos;
    private int zzStartRead;
    private int zzEndRead;
    private int yyline;
    private int yychar;
    private int yycolumn;
    private boolean zzAtBOL;
    private boolean zzAtEOF;
    private boolean zzEOFDone;
    private static final byte PARAN = 1;
    private static final byte BRACKET = 2;
    private static final byte CURLY = 3;

}
